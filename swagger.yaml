---
swagger: '2.0'
info:
  title: area_region_service.proto
  version: version not set
consumes:
- application/json
produces:
- application/json
paths:
  "/v1/check":
    post:
      summary: |-
        Create a new check.
        Authorization scope of `fm.check.create` is required.
      operationId: CheckService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateCheckResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateCheckRequest"
      tags:
      - CheckService
  "/v1/check/checkinout":
    post:
      summary: |-
        Check can be used to check in a staff to a opening_check and check out to a
        closing check Authorization scope of `fm.check.in` and `fm.check.out` is
        required.
      operationId: CheckService_CheckInOut
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCheckInOutRequest"
      tags:
      - CheckService
  "/v1/checks":
    get:
      summary: |-
        List returns the list of check visible to the authroized user in descending
        date order. Authorization scope of `fm.check.list` is required.
      operationId: CheckService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListCheckResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: filter for selected organization check request.
        in: query
        required: false
        type: string
      tags:
      - CheckService
  "/v1/client":
    post:
      summary: |-
        Create a new client.
        Authorization scope of `fm.client.create` is required.
      operationId: ClientService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateClientResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateClientRequest"
      tags:
      - ClientService
    patch:
      summary: |-
        Update an existing client.
        Authorization scope of `fm.client.update` is required.
      operationId: ClientService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateClientResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateClientRequest"
      tags:
      - ClientService
  "/v1/client-employee":
    post:
      summary: |-
        Create a new client employee relation(many to many). this helps to assign
        employee to the client.
        Authorization scope of `fm.client-employee.create` is required.
      operationId: ClientEmployeeService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateClientEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateClientEmployeeRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/contracted-hours":
    get:
      summary: |-
        Get contracted hours of the employee for the client
        Authorization scope of `fm.client-employee.get-contracted-hours` is
        required.
      operationId: ClientEmployeeService_GetContractedHours
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetContractedHoursResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_employee_id
        description: unique id of client employee relation.
        in: query
        required: false
        type: string
      - name: organization_id
        description: organization id of the client employee relation.
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
    put:
      summary: |-
        Assign contracted hours to the employee for the client
        Authorization scope of `fm.client-employee.assign-contracted-hours` is
        required.
      operationId: ClientEmployeeService_AssignContractedHours
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmAssignContractedHoursResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAssignContractedHoursRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/contracted-hours-by-client":
    get:
      summary: |-
        Get contracted hours of the multiple employees of a signle client(by id)
        Authorization scope of `fm.client-employee.get-contracted-hours-by-client` is
        required.
      operationId: ClientEmployeeService_GetContractedHoursByClient
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetContractedHoursByClientResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: unique id of client.
        in: query
        required: false
        type: string
      - name: organization_id
        description: organization id of the client employee relation.
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employee/contracted-hours-by-employee":
    get:
      summary: |-
        Get contracted hours of a employees for his/her multiplr clients
        Authorization scope of `fm.client-employee.get-contracted-hours-by-employee` is
        required.
      operationId: ClientEmployeeService_GetContractedHoursByEmployee
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetContractedHoursByEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: unique id of employee.
        in: query
        required: false
        type: string
      - name: organization_id
        description: organization id of the client employee relation.
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employee/feedback":
    get:
      summary: |-
        List feedbacks.
        Authorization scope of `fm.client-employee.feedback.list` is required.
      operationId: ClientEmployeeService_ListFeedback
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListFeedbackResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: organization id.
        in: query
        required: false
        type: string
      - name: client_id
        description: unique id of client who is providing feedback.
        in: query
        required: false
        type: string
      - name: employee_id
        description: unique id of employee.
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
    post:
      summary: |-
        Create a new feedback.
        Authorization scope of `fm.client-employee.feedback.create` is required.
      operationId: ClientEmployeeService_CreateFeedback
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateFeedbackResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateFeedbackRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/get-client-ids-by-employee/{employee_id}":
    get:
      summary: |-
        Get client_ids by employee_id
        Authorization scope of `fm.client-employee.get-client-ids-by-employee-id`
        is required.
      operationId: ClientEmployeeService_GetClientIdsByEmployeeId
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetClientIdsByEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: Employee id
        in: path
        required: true
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employee/get-employees-by-client":
    get:
      summary: |-
        Get employees by Client_id
        Authorization scope of `fm.client-employee.get-employee-ids-by-client-id`
        is required.
      operationId: ClientEmployeeService_GetEmployeeIdsByClientId
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetEmployeeIdsByClientIdResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: organization_id
        description: organization id.
        in: query
        required: false
        type: string
      - name: client_id
        description: Id of client.
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employee/get-ids-by-employee/{employee_id}":
    get:
      summary: |-
        Get client_employee_ids by employee_id
        Authorization scope of
        `fm.client-employee.get-client-employee-ids-by-employee-id` is required.
      operationId: ClientEmployeeService_GetClientEmployeeIdsByEmployeeId
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetClientEmployeeIdsByEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: Employee id
        in: path
        required: true
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employee/shift":
    put:
      summary: |-
        Assign shift to the employee for the client
        Authorization scope of `fm.client-employee.assign-shift` is required.
      operationId: ClientEmployeeService_AssignShift
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmAssignClientEmployeeShiftResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAssignClientEmployeeShiftRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/target-tasks":
    put:
      summary: |-
        Assign target tasks for each day of the week in a fixed interval of time
        for an employee for a client
        Authorization scope of `fm.client-employee.assign-target-tasks` is
        required.
      operationId: ClientEmployeeService_AssignTargetTasks
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmAssignTargetTasksResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAssignTargetTasksRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/target-tasks/{client_employee_id}":
    get:
      summary: |-
        Get the assigned target tasks of an employee for a client
        Authorization scope of `fm.client-employee.get-target-tasks` is required.
      operationId: ClientEmployeeService_GetTargetTasks
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetTargetTasksResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_employee_id
        description: unique identifier for the client employee relation
        in: path
        required: true
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employee/training":
    get:
      summary: |-
        Get employee trainings
        Authorization scope of `fm.client-employee.get-employee-trainings` is
        required.
      operationId: ClientEmployeeService_GetEmployeeTraining
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetEmployeeTrainingResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: Unique id of client with the training.
        in: query
        required: false
        type: string
      - name: organization_id
        description: organization id of the employee working for client.
        in: query
        required: false
        type: string
      - name: trainee_id
        description: Unique id of trainee employee.
        in: query
        required: false
        type: string
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      tags:
      - ClientEmployeeService
    post:
      summary: |-
        Create training for employee of client
        Authorization scope of `fm.client-employee.create-employee-training` is
        required
      operationId: ClientEmployeeService_CreateEmployeeTraining
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateEmployeeTrainingResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateEmployeeTrainingRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/transfer":
    post:
      summary: |-
        Create a new transfer.
        Authorization scope of `fm.client-employee.transfer.create` is required.
      operationId: ClientEmployeeService_CreateTransfer
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateTransferResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateTransferRequest"
      tags:
      - ClientEmployeeService
  "/v1/client-employee/transfers":
    get:
      summary: |-
        List transfers.
        Authorization scope of `fm.client-employee.transfer.list` is required.
      operationId: ClientEmployeeService_ListTransfer
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListTransferResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: employee_id
        in: query
        required: false
        type: string
      - name: client_id
        in: query
        required: false
        type: string
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client-employees":
    get:
      summary: |-
        List the employees assigned in the clients
        Authorization scope of `fm.client-employee.list` is required.
      operationId: ClientEmployeeService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListClientEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - ClientEmployeeService
  "/v1/client/change-status":
    patch:
      summary: |-
        Change status of a client.
        Scope of `fm.client.status-change` is required.
      operationId: ClientService_ChangeStatus
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmClientChangeStatusResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmClientChangeStatusRequest"
      tags:
      - ClientService
  "/v1/client/set-head-office":
    post:
      summary: |-
        set a single head office from clients.
        Scope of `fm.client.set-headoffice` is required.
      operationId: ClientService_SetHeadOffice
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmClientSetHeadOfficeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmClientSetHeadOfficeRequest"
      tags:
      - ClientService
  "/v1/client/{client_id}":
    get:
      summary: |-
        Details of client.
        Scope of `fm.client.detail` is required.
      operationId: ClientService_Detail
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmClientDetailResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: Client Id of the client
        in: path
        required: true
        type: string
      tags:
      - ClientService
  "/v1/client/{client_id}/attachment":
    get:
      summary: |-
        Lists attachment for a client.
        Scope of `fm.client.list-attachment` is required.
      operationId: ClientService_ListAttachment
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmClientListAttachmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: unique identifier of the client
        in: path
        required: true
        type: string
      - name: attachment_type
        description: type of attachment to list.
        in: query
        required: false
        type: string
      tags:
      - ClientService
    post:
      summary: |-
        Adds attachment for a client.
        Scope of `fm.client.add-attachment` is required.
      operationId: ClientService_AddAttachment
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmClientAddAttachmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: unique identifier of the client
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmClientAddAttachmentRequest"
      tags:
      - ClientService
  "/v1/client/{client_id}/mobilization":
    get:
      summary: |-
        List client mobilization
        Authorization scope of `fm.client.get-client-mobilization` is required
      operationId: ClientService_ListClientMobilization
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListClientMobilizationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: client id of the requested mobilization
        in: path
        required: true
        type: string
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      tags:
      - ClientService
    post:
      summary: |-
        Create a new client mobilization
        Authorization scope of `fm.client.create-client-mobilization` is required
      operationId: ClientService_CreateClientMobilization
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateClientMobilizationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: client id for the mobilization
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateClientMobilizationRequest"
      tags:
      - ClientService
    patch:
      summary: |-
        Update client mobilization
        Authorization scope of `fm.client.update-client-mobilization` is required
      operationId: ClientService_UpdateClientMobilization
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateClientMobilizationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: client id for the mobilization
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateClientMobilizationRequest"
      tags:
      - ClientService
  "/v1/clients":
    get:
      summary: |-
        List returns the list of client visible to the authorized user in
        descending order. Scope of `fm.client.list` is required.
      operationId: ClientService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListClientResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch clients for this organization_id.
        in: query
        required: false
        type: string
      - name: client_ids
        description: list of client ids to fetch by.
        in: query
        required: false
        type: string
      - name: status
        description: status to fetch clients by.
        in: query
        required: false
        type: string
      - name: search.name
        description: name of client.
        in: query
        required: false
        type: string
      - name: search.client_code
        description: unique client code.
        in: query
        required: false
        type: string
      - name: search.area
        description: area of client.
        in: query
        required: false
        type: string
      - name: search.region
        description: region of client.
        in: query
        required: false
        type: string
      tags:
      - ClientService
  "/v1/department":
    delete:
      summary: Delete a department. Authorization scope of `fm.department.delete`
        is required
      operationId: DepartmentService_Delete
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmDeleteDepartmentRequest"
      tags:
      - DepartmentService
    post:
      summary: |-
        Create a new department. Authorization scope of `fm.department.create` is
        required
      operationId: DepartmentService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateDepartmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateDepartmentRequest"
      tags:
      - DepartmentService
    put:
      summary: |-
        Update department of an organization. Authorization scope of `fm.department.update`
        is required
      operationId: DepartmentService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateDepartmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateDepartmentRequest"
      tags:
      - DepartmentService
  "/v1/department/area":
    post:
      summary: |-
        Create a new Area. Authorization scope of `fm.area.create` is
        required
      operationId: AreaRegionService_CreateArea
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAreaResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateAreaRequest"
      tags:
      - AreaRegionService
    put:
      summary: Update existing Area. Authorization scope of `fm.area.update` is required
      operationId: AreaRegionService_UpdateArea
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAreaResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateAreaRequest"
      tags:
      - AreaRegionService
  "/v1/department/area/assign-supervisor":
    post:
      summary: |-
        Add/Update Area Supervisor of given area
        Authorization scope of `fm.area.update` is required
      operationId: AreaRegionService_UpsertAreaSupervisor
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAreaSupervisorResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpsertAreaSupervisorRequest"
      tags:
      - AreaRegionService
  "/v1/department/area/remove-supervisor":
    post:
      summary: "Remove area supervisor \nAuthorization scope of `fm.area.update` is
        required"
      operationId: AreaRegionService_RemoveAreaSupervisor
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmRemoveAreaSupervisorResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmRemoveAreaSupervisorRequest"
      tags:
      - AreaRegionService
  "/v1/department/areas":
    get:
      summary: |-
        List returns the list of Area
        ascending order of Area title
      operationId: AreaRegionService_ListArea
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListAreaResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      - name: region_id
        in: query
        required: false
        type: string
      tags:
      - AreaRegionService
  "/v1/department/region":
    post:
      summary: |-
        Create a new Region. Authorization scope of `fm.region.create` is
        required
      operationId: AreaRegionService_CreateRegion
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertRegionResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateRegionRequest"
      tags:
      - AreaRegionService
    put:
      summary: Create a new Region. Authorization scope of `fm.region.update` is required
      operationId: AreaRegionService_UpdateRegion
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertRegionResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateRegionRequest"
      tags:
      - AreaRegionService
  "/v1/department/regions":
    get:
      summary: |-
        List returns the list of regions
        ascending order of region title
      operationId: AreaRegionService_ListRegion
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListRegionResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - AreaRegionService
  "/v1/department/sector":
    delete:
      summary: Delete a sector. Authorization scope of `fm.sector.delete` is required
      operationId: SectorService_DeleteSector
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmDeleteSectorRequest"
      tags:
      - SectorService
    post:
      summary: Create a new sector. Authorization scope of `fm.sector.create` is required
      operationId: SectorService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateSectorResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateSectorRequest"
      tags:
      - SectorService
    put:
      summary: Update sector details. Authorization scope of `fm.sector.update` is
        required
      operationId: SectorService_UpdateSector
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateSectorResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateSectorRequest"
      tags:
      - SectorService
  "/v1/department/sectors":
    get:
      summary: |-
        List returns the list of sector visible to the authorized user in
        ascending order of sector title
      operationId: SectorService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListSectorResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - SectorService
  "/v1/departments":
    get:
      summary: |-
        List returns the list of department visible to the authroized user in
        ascending order of department title
      operationId: DepartmentService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListDepartmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - DepartmentService
  "/v1/designation":
    delete:
      summary: Delete a designation. Authorization scope of `fm.designation.delete`
        is required
      operationId: DesignationService_DeleteDesignation
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmDeleteDesignationRequest"
      tags:
      - DesignationService
    post:
      summary: |-
        Create a new designation. Authorization scope of `fm.designation.create`
        is required
      operationId: DesignationService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateDesignationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateDesignationRequest"
      tags:
      - DesignationService
    put:
      summary: Update designation details. Authorization scope of `fm.designation.update`
        is required
      operationId: DesignationService_UpdateDesignation
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateDesignationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateDesignationRequest"
      tags:
      - DesignationService
  "/v1/designations":
    get:
      summary: |-
        List returns the list of designation visible to the authorized user in
        descending
      operationId: DesignationService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListDesignationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - DesignationService
  "/v1/employee":
    post:
      summary: |-
        Create a new employee.
        Authorization scope of `fm.employee.create` is required.
      operationId: EmployeeService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateEmployeeRequest"
      tags:
      - EmployeeService
    patch:
      summary: |-
        Update an existing employee.
        Authorization scope of `fm.employee.update` is required.
      operationId: EmployeeService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateEmployeeRequest"
      tags:
      - EmployeeService
  "/v1/employee/status":
    post:
      summary: |-
        Update an employee status
        Authorization scope of `fm.employee.update-status` is required.
      operationId: EmployeeService_UpdateStatus
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateEmployeeStatusResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateEmployeeStatusRequest"
      tags:
      - EmployeeService
  "/v1/employee/{employee_id}":
    get:
      summary: |-
        Details of employee.
        Scope of `fm.employee.detail` is required.
      operationId: EmployeeService_Detail
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmEmployeeDetailResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: employee Id of the employee
        in: path
        required: true
        type: string
      tags:
      - EmployeeService
  "/v1/employee/{employee_id}/attachment":
    get:
      summary: |-
        Lists attachment for an employee.
        Scope of `fm.employee.list-attachment` is required.
      operationId: EmployeeService_ListAttachment
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmEmployeeListAttachmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: unique identifier of the employee
        in: path
        required: true
        type: string
      - name: attachment_type
        description: type of attachment to list.
        in: query
        required: false
        type: string
      tags:
      - EmployeeService
    delete:
      summary: |-
        Soft deletes an attachment for an employee.
        Scope of `fm.employee.delete-attachment` is required.
      operationId: EmployeeService_DeleteAttachment
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmEmployeeDeleteAttachmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: unique identifier for an employee
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmEmployeeDeleteAttachmentRequest"
      tags:
      - EmployeeService
    post:
      summary: |-
        Adds attachment for an employee.
        Scope of `fm.employee.add-attachment` is required.
      operationId: EmployeeService_AddAttachment
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmEmployeeAddAttachmentResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: employee_id
        description: unique identifier of the employee
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmEmployeeAddAttachmentRequest"
      tags:
      - EmployeeService
  "/v1/employees":
    get:
      summary: |-
        List returns the list of employee visible to the authroized user in
        descending order. Authorization scope of `fm.employee.list` is required.
      operationId: EmployeeService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch employees this organization_id belongs to.
        in: query
        required: false
        type: string
      - name: status
        description: fetch employees of this status.
        in: query
        required: false
        type: string
      - name: search.name
        description: name of client.
        in: query
        required: false
        type: string
      - name: search.employee_code
        description: unique client code.
        in: query
        required: false
        type: string
        format: int64
      - name: search.area
        description: area of client.
        in: query
        required: false
        type: string
      - name: search.region
        description: region of client.
        in: query
        required: false
        type: string
      tags:
      - EmployeeService
  "/v1/employees/covers":
    get:
      operationId: EmployeeCoverService_ListEmployeeCover
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListCoverResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch employees this organization_id belongs to.
        in: query
        required: false
        type: string
      - name: employee_d
        description: fetch cover for employee id.
        in: query
        required: false
        type: string
      tags:
      - EmployeeCoverService
  "/v1/employees/holidays":
    get:
      summary: |-
        List returns the list of employee holidays visible to the authroized user
        in descending order or created date. Authorization scope of
        `fm.employee.holiday.list` is required.
      operationId: EmployeeHolidayService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListHolidayResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch employees this organization_id belongs to.
        in: query
        required: false
        type: string
      tags:
      - EmployeeHolidayService
    post:
      summary: |-
        Creates holiday for an employee.
        Authentication scope of `fm.employee.holiday.create` is required.
      operationId: EmployeeHolidayService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateHolidayResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateHolidayRequest"
      tags:
      - EmployeeHolidayService
  "/v1/employees/leavers":
    get:
      summary: |-
        List employees that are leaving or left
        Authentication scope of `fm.employee.leaver.list` is required
      operationId: EmployeeLeaverService_ListEmployeeLeaver
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListEmployeeLeaverResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: client_id
        description: fetch leaver employees this client_id belongs to.
        in: query
        required: false
        type: string
      - name: employee_id
        description: unique id of employee.
        in: query
        required: false
        type: string
      - name: organization_id
        description: fetch leaver employees this organization_id belongs to.
        in: query
        required: false
        type: string
      tags:
      - EmployeeLeaverService
  "/v1/employees/sick":
    post:
      summary: |-
        Create employee sick
        Authentication scope of `fm.employee.sick.create` is required
      operationId: EmployeeSickService_CreateEmployeeSick
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateEmployeeSickResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateEmployeeSickRequest"
      tags:
      - EmployeeSickService
    patch:
      summary: |-
        update employee sick
        Authentication scope of `fm.employee.sick.update` is required
      operationId: EmployeeSickService_UpdateEmployeeSick
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateEmployeeSickResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateEmployeeSickRequest"
      tags:
      - EmployeeSickService
  "/v1/employees/sicks":
    get:
      summary: |-
        list employee sick
        Authentication scope of `fm.employee.sick.list` is required
      operationId: EmployeeSickService_ListEmployeeSick
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListEmployeeSickResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: client_id
        description: fetch employees this client_id belongs to.
        in: query
        required: false
        type: string
      - name: organization_id
        description: fetch employees this organization_id belongs to.
        in: query
        required: false
        type: string
      tags:
      - EmployeeSickService
  "/v1/inventory":
    get:
      summary: |-
        Returns the list of inventory items in ascending order of name.
        Authorization scope of `fm.inventory.list` is required.
      operationId: InventoryService_ListInventoryItem
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListInventoryItemResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: filter for selected organization check request.
        in: query
        required: false
        type: string
      - name: inventory_item_ids
        description: list of item ids to fetch by.
        in: query
        required: false
        type: string
      tags:
      - InventoryService
    post:
      summary: |-
        Create a new inventory item.
        Authorization scope of `fm.inventory.create` is required.
      operationId: InventoryService_CreateInventoryItem
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateInventoryItemResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateInventoryItemRequest"
      tags:
      - InventoryService
  "/v1/inventory/category":
    get:
      summary: |-
        Returns the list of inventory item categories in ascending order of name.
        Authorization scope of `fm.inventory.category.list` is required.
      operationId: InventoryService_ListInventoryCategory
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListInventoryCategoryResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: organization_id
        description: Organization id.
        in: query
        required: false
        type: string
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: inventory_category_ids
        description: list of inventory category ids to fetch by.
        in: query
        required: false
        type: string
      tags:
      - InventoryService
    post:
      summary: |-
        Create a new inventory category.
        Authorization scope of `fm.inventory.category.create` is required.
      operationId: InventoryService_CreateInventoryCategory
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateInventoryCategoryResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateInventoryCategoryRequest"
      tags:
      - InventoryService
  "/v1/job-type":
    post:
      summary: |-
        Create a new job type. Authorization scope of `fm.job-type.create` is
        required
      operationId: JobTypeService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateJobTypeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateJobTypeRequest"
      tags:
      - JobTypeService
  "/v1/job-types":
    get:
      summary: |-
        List returns the list of job type visible to the authorized user in
        ascending order of job type title
      operationId: JobTypeService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListJobTypeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        in: query
        required: false
        type: string
      tags:
      - JobTypeService
  "/v1/login":
    post:
      summary: authenticates user and returns tokens
      operationId: JWTTokenService_Login
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmLoginResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmLoginRequest"
      tags:
      - JWTTokenService
  "/v1/logout":
    post:
      summary: logout the user and invalidate refresh token
      operationId: JWTTokenService_Logout
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmLogoutResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmLogoutRequest"
      tags:
      - JWTTokenService
  "/v1/meeting":
    get:
      summary: |-
        List returns the list of meeting visible to the authorized user in
        descending order. Scope of `fm.meeting.list` is required.
      operationId: MeetingService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListMeetingResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch meetings for this organization_id.
        in: query
        required: false
        type: string
      - name: meeting_ids
        description: list of meeting ids to fetch by.
        in: query
        required: false
        type: string
      - name: status
        description: filter option of status (inprogress, cancel, completed).
        in: query
        required: false
        type: string
      - name: start_date
        description: start date to filter meeting by.
        in: query
        required: false
        type: string
        format: date-time
      - name: end_date
        description: end date to filter meeting by.
        in: query
        required: false
        type: string
        format: date-time
      tags:
      - MeetingService
    post:
      summary: |-
        Create a new meeting.
        Authorization scope of `fm.meeting.create` is required.
      operationId: MeetingService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateMeetingResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateMeetingRequest"
      tags:
      - MeetingService
    put:
      summary: |-
        Update an existing meeting.
        Authorization scope of `fm.meeting.update` is required.
      operationId: MeetingService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateMeetingResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateMeetingRequest"
      tags:
      - MeetingService
  "/v1/meeting/add-attendees":
    post:
      summary: |-
        Add Attendees to existing meetings.
        Authorization scope of `fm.meeting.update` is required.
      operationId: MeetingService_AddAttendees
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAddAttendeesRequest"
      tags:
      - MeetingService
  "/v1/meeting/agenda/decision":
    post:
      summary: Add decision of an agenda
      operationId: MeetingService_AddAgendaDecision
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAgendaDecisionResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAddAgendaDecisionRequest"
      tags:
      - MeetingService
    put:
      summary: Update decision of an agenda
      operationId: MeetingService_UpdateAgendaDecision
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAgendaDecisionResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateAgendaDecisionRequest"
      tags:
      - MeetingService
  "/v1/meeting/agenda/decision/objection":
    post:
      summary: Add objection of decision of agenda
      operationId: MeetingService_AddAgendaDecisionObjection
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAgendaDecisionObjectionResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAddAgendaDecisionObjectionRequest"
      tags:
      - MeetingService
  "/v1/meeting/agenda/decision/objection-delete":
    delete:
      summary: Delete objection made for decisions of an agenda
      operationId: MeetingService_DeleteAgendaDecisionObjection
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmDeleteAgendaDecisionObjectionRequest"
      tags:
      - MeetingService
  "/v1/meeting/agenda/timer":
    post:
      summary: start/stop agenda of meeting
      operationId: MeetingService_AgendaTimerUpdate
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmAgendaTimerResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAgendaTimerRequest"
      tags:
      - MeetingService
  "/v1/meeting/agenda/view":
    post:
      summary: Add views to a given agenda in a meeting.
      operationId: MeetingService_AddAgendaView
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAgendaViewResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAddAgendaViewRequest"
      tags:
      - MeetingService
    put:
      summary: Edit views of a given agenda in a meeting.
      operationId: MeetingService_EditAgendaView
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpsertAgendaViewResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmEditAgendaViewRequest"
      tags:
      - MeetingService
  "/v1/meeting/agenda/view-delete":
    post:
      summary: Delete views of a given agenda in a meeting.
      operationId: MeetingService_DeleteAgendaView
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmDeleteAgendaViewRequest"
      tags:
      - MeetingService
  "/v1/meeting/{meeting_id}":
    get:
      summary: |-
        Detail returns the detail of meeting along with its agendas, views, decisions and objections
        Attendees/Creator of meeting can view the details.
      operationId: MeetingService_Detail
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmDetailMeetingResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: meeting_id
        description: meeting Id of the meeting to view
        in: path
        required: true
        type: string
      tags:
      - MeetingService
  "/v1/note":
    post:
      summary: |-
        Create a new note.
        Authorization scope of `fm.note.create` is required.
      operationId: NoteService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateNoteResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateNoteRequest"
      tags:
      - NoteService
    patch:
      summary: |-
        Update an existing note.
        Authorization scope of `fm.note.update` is required.
      operationId: NoteService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateNoteResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateNoteRequest"
      tags:
      - NoteService
  "/v1/notes":
    get:
      summary: |-
        Returns list of notes.
        Authorization scope of `fm.note.list` is required.
      operationId: NoteService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListNotesResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: created_by
        description: id of the note creator.
        in: query
        required: false
        type: string
      - name: for
        description: id for whom notes are created.
        in: query
        required: false
        type: string
      - name: organization_id
        description: unique id of the organization.
        in: query
        required: false
        type: string
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      tags:
      - NoteService
  "/v1/organization":
    post:
      summary: Create a new organization.
      operationId: OrganizationService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateOrganizationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateOrganizationRequest"
      tags:
      - OrganizationService
  "/v1/organizations":
    get:
      summary: |-
        List returns the list of organization visible to the authroized user in
        descending order.
      operationId: OrganizationService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListOrganizationResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      tags:
      - OrganizationService
  "/v1/refresh":
    post:
      summary: refresh an existing token and return new tokens
      operationId: JWTTokenService_Refresh
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmLoginResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmRefreshRequest"
      tags:
      - JWTTokenService
  "/v1/task":
    post:
      summary: |-
        Create a new task.
        Authorization scope of `fm.task.create` is required.
      operationId: TaskService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateTaskResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateTaskRequest"
      tags:
      - TaskService
    put:
      summary: |-
        Update an existing task.
        Authorization scope of `fm.task.update` is required.
      operationId: TaskService_Update
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateTaskResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateTaskRequest"
      tags:
      - TaskService
  "/v1/task/checkin":
    post:
      summary: |-
        Checkin can be used to check in a staff to a task.
        Authorization scope of `fm.task.checkin` is required.
      operationId: TaskService_Checkin
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCheckinTaskRequest"
      tags:
      - TaskService
  "/v1/task/checkout":
    post:
      summary: |-
        Checkout can be used to check-out a staff from an existing checked-in task.
        Authorization scope of `fm.task.checkout` is required.
      operationId: TaskService_Checkout
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCheckoutTaskRequest"
      tags:
      - TaskService
  "/v1/task/detail/{task_id}":
    get:
      summary: |-
        List returns the list of all tasks visible to the authroized user in
        descending date order. Authorization scope of `fm.task.detail` is required.
      operationId: TaskService_Detail
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmTaskDetailResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: task_id
        description: unique id of task
        in: path
        required: true
        type: string
      tags:
      - TaskService
  "/v1/task/recurrence":
    put:
      summary: |-
        Update task recurrence.
        Authorization scope of `fm.task.update` is required.
      operationId: TaskService_UpdateRecurrence
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateRecurrenceResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateRecurrenceRequest"
      tags:
      - TaskService
  "/v1/task/update-by-client":
    put:
      summary: |-
        Update an existing task by client_id
        Authorization scope of `fm.task.update-by-client` is required.
      operationId: TaskService_UpdateByClient
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateTaskByClientResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateTaskByClientRequest"
      tags:
      - TaskService
  "/v1/task/update-by-employee":
    put:
      summary: |-
        Update an existing task by employee_id
        Authorization scope of `fm.task.update-by-client` is required.
      operationId: TaskService_UpdateByEmployee
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateTaskByEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateTaskByEmployeeRequest"
      tags:
      - TaskService
  "/v1/tasks":
    get:
      summary: |-
        List returns the list of all tasks visible to the authroized user in
        descending date order. Authorization scope of `fm.task.list` is required.
      operationId: TaskService_List
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListTaskResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: organization of employee the task is assigned to.
        in: query
        required: false
        type: string
      - name: start_date
        description: For task filter based on task start time (optional).
        in: query
        required: false
        type: string
        format: date-time
      - name: end_date
        description: For task filter based on task start time (optional).
        in: query
        required: false
        type: string
        format: date-time
      - name: employee_id
        description: id of employee (optional).
        in: query
        required: false
        type: string
      - name: status
        description: 'status of task : "COMPLETE", "INCOMPLETE".'
        in: query
        required: false
        type: string
      - name: client_ids
        description: filter by ids of clients.
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      tags:
      - TaskService
  "/v1/tasks/change-timesheet-correction-status":
    patch:
      summary: Change timesheet correction request status
      operationId: TaskService_ChangeTimesheetCorrectionStatus
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmChangeTimesheetCorrectionStatusResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmChangeTimesheetCorrectionStatusRequest"
      tags:
      - TaskService
  "/v1/tasks/issue":
    post:
      summary: |-
        Create a new issue.
        Authorization scope of `fm.issue.create` is required.
      operationId: IssueService_CreateIssue
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateIssueResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateIssueRequest"
      tags:
      - IssueService
    patch:
      summary: |-
        Update an existing issue.
        Authorization scope of `fm.issue.update` is required.
      operationId: IssueService_UpdateIssue
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmUpdateIssueResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateIssueRequest"
      tags:
      - IssueService
  "/v1/tasks/issues":
    get:
      summary: |-
        List returns the list of all issues visible to the authroized user in
        descending date order. Authorization scope of `fm.issue.list` is required.
      operationId: IssueService_ListIssues
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListIssuesResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: raised_by
        description: id of the user raising the issue.
        in: query
        required: false
        type: string
      - name: assigned_to
        description: id of the user responsible for solving the issue.
        in: query
        required: false
        type: string
      - name: status
        description: status of the issue.
        in: query
        required: false
        type: string
      - name: organization_id
        description: unique id of the organization.
        in: query
        required: false
        type: string
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      tags:
      - IssueService
  "/v1/tasks/list-by-client":
    get:
      summary: |-
        List returns the list of task by client visible to the authroized user in
        descending date order. Authorization scope of `fm.task.list-by-client` is
        required.
      operationId: TaskService_ListByClient
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListTaskByClientResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: start_date
        description: the client timesheet report starts from this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: end_date
        description: the client timesheet report  upto this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: client_id
        description: fetch timesheet for this client_id.
        in: query
        required: false
        type: string
      tags:
      - TaskService
  "/v1/tasks/list-by-employee":
    get:
      summary: |-
        List returns the list of task by employee visible to the authroized user in
        descending date order.
        Authorization scope of `fm.task.list-by-employee` is required.
      operationId: TaskService_ListByEmployee
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListTaskByEmployeeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: start_date
        description: the client timesheet report starts from this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: end_date
        description: the client timesheet report  upto this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: employee_id
        description: fetch timesheet for this employee_id.
        in: query
        required: false
        type: string
      tags:
      - TaskService
  "/v1/tasks/list-by-mobile-employees":
    get:
      summary: |-
        List returns the list of task by mobile employees visible to the authroized
        user in descending date order.
        Authorization scope of `fm.task.list-by-mobile-employees` is required.
      operationId: TaskService_ListByMobileEmployees
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListTaskByMobileEmployeesResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: start_date
        description: the client timesheet report starts from this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: end_date
        description: the client timesheet report  upto this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch mobile employee timesheet for this organization_id.
        in: query
        required: false
        type: string
      tags:
      - TaskService
  "/v1/tasks/list-by-variation-clients":
    get:
      summary: |-
        List returns the list of task by variation clients visible to the
        authroized user in descending date order. Authorization scope of
        `fm.task.list-by-variation-clients` is required.
      operationId: TaskService_ListByVariationClients
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmListTaskByVariationClientsResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: start_date
        description: the client timesheet report starts from this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: end_date
        description: the client timesheet report  upto this date.
        in: query
        required: false
        type: string
        format: date-time
      - name: filter.limit
        in: query
        required: false
        type: integer
        format: int32
      - name: filter.page
        in: query
        required: false
        type: integer
        format: int32
      - name: organization_id
        description: fetch mobile employee timesheet for this organization_id.
        in: query
        required: false
        type: string
      tags:
      - TaskService
  "/v1/user":
    post:
      summary: |-
        Create a new user.
        Authorization scope of `fm.user.create` is required.
      operationId: UserService_Create
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateUserResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateUserRequest"
      tags:
      - UserService
  "/v1/user/associate":
    post:
      summary: |-
        associates login with an employee record.
        Authorization scope of `fm.user.associate` is required.
      operationId: UserService_AssociateWithEmployee
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmAssociateWithEmployeeRequest"
      tags:
      - UserService
    patch:
      summary: |-
        update scopes of user
        Authorization scope of `` is required.
      operationId: UserService_UpdateEmployeeScope
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpdateEmployeeScopeRequest"
      tags:
      - UserService
  "/v1/user/auto-create":
    post:
      summary: "create user with no password and email is sent with password link
        \nAuthorization scope of `fm.user.associate` is required."
      operationId: UserService_CreateUserOnEmployeeCreate
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmCreateUserOnEmployeeCreateResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmCreateUserOnEmployeeCreateRequest"
      tags:
      - UserService
  "/v1/user/forgot-password":
    post:
      summary: forgot password endpoint
      operationId: UserService_ForgotPassword
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmForgotPasswordResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmForgotPasswordRequest"
      tags:
      - UserService
  "/v1/user/list__by_role":
    get:
      summary: get list of users from role name
      operationId: UserService_GetUserListFromRole
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetUserListFromRoleResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: organization_id
        description: id of organization.
        in: query
        required: false
        type: string
      - name: role
        description: name of role.
        in: query
        required: false
        type: string
      tags:
      - UserService
  "/v1/user/list_by_employees":
    get:
      summary: |-
        get user list according to employee id for changing roles/scopes
        Authorization scope of `` is required
      operationId: UserService_GetUserListByEmployeeIds
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmGetUserListResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: organization_id
        description: id of organization.
        in: query
        required: false
        type: string
      - name: employee_ids
        description: employeee ids.
        in: query
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
      tags:
      - UserService
  "/v1/user/reset-password":
    post:
      summary: update password using token from email
      operationId: UserService_ResetPassword
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmResetPasswordResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmResetPasswordRequest"
      tags:
      - UserService
  "/v1/user/role":
    post:
      summary: |-
        insert or update role scopes.
        Authorization scope of `fm.role.create` and "fm.role.update" is required.
      operationId: UserService_UpsertRole
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpsertRoleRequest"
      tags:
      - UserService
  "/v1/user/roles":
    get:
      summary: |-
        get roles
        Authorization scope of `` is required.
      operationId: UserService_GetAvailableRoles
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmRoleResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: organization_id
        description: id of organization.
        in: query
        required: false
        type: string
      tags:
      - UserService
  "/v1/user/scopes":
    get:
      summary: |-
        get all scopes
        Authorization scope of `` is required
      operationId: UserService_GetAvailableScopes
      responses:
        '200':
          description: A successful response.
          schema:
            "$ref": "#/definitions/fmScopeResponse"
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: organization_id
        description: id of organization.
        in: query
        required: false
        type: string
      tags:
      - UserService
    post:
      summary: |-
        Insert or update a scope group.
        Authorization scope of `` is required.
      operationId: UserService_UpsertScope
      responses:
        '200':
          description: A successful response.
          schema:
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            "$ref": "#/definitions/runtimeError"
      parameters:
      - name: body
        in: body
        required: true
        schema:
          "$ref": "#/definitions/fmUpsertScopeRequest"
      tags:
      - UserService
definitions:
  ClientListAttachmentResponseClientAttachmentPayload:
    type: object
    properties:
      attachment_id:
        type: string
        title: unique identifier of the newly created attachment record
      attachment_path:
        type: string
        title: attachment path
      attachment_type:
        type: string
        title: attachment type
      created_at:
        type: string
        format: date-time
        title: created at timestamp
      uploaded_by:
        type: string
        title: uploaded by
  ContactDetailAddress:
    type: object
    properties:
      address1:
        type: string
        title: address_line 1
      address2:
        type: string
        title: address line 2
      city:
        type: string
        title: city
      post_code:
        type: string
        title: post_code
      county:
        type: string
        title: county
      town:
        type: string
        title: town
    title: Address details
  EmployeeListAttachmentResponseEmployeeAttachmentPayload:
    type: object
    properties:
      attachment_id:
        type: string
        title: unique identifier of the newly created attachment record
      attachment_path:
        type: string
        title: attachment path
      attachment_type:
        type: string
        title: attachment type
      attachment_name:
        type: string
        title: name of attachment
      uploaded_by:
        type: string
        title: uploaded by
      created_at:
        type: string
        format: date-time
        title: created at timestamp
  GetEmployeeIdsByClientIdResponseEmployeeListData:
    type: object
    properties:
      client_employee_id:
        type: string
        title: 'client-employee id : unique id of client employee relation'
      employee_id:
        type: string
        title: id of employee
  GetEmployeeTrainingResponseEmployeeTrainingResponse:
    type: object
    properties:
      trainee_id:
        type: string
        title: Unique id of trainee employee
      trainer_id:
        type: string
        title: Unique id of trainer employee
      training_subject:
        type: string
        title: Subject of the training
      training_date:
        type: string
        format: date-time
        title: Date of the training
      attachment_file:
        type: string
        title: Attachment file regarding training
      client_id:
        type: string
        title: Unique id for the client
      organization_id:
        type: string
        title: organization id of the employee working for client
      employee_training_id:
        type: string
        title: Unique id of the training for employee
      created_at:
        type: string
        format: date-time
        title: Date of training creation
  ListAreaResponseAreaResponse:
    type: object
    properties:
      area_id:
        type: string
        title: id of area
      region_id:
        type: string
        title: region that area belongs to
      title:
        type: string
        title: title of area
      organization_id:
        type: string
        title: organization id
      area_manager:
        type: string
        title: single area manager
      areamanager_restricted_clients:
        type: array
        items:
          type: string
        title: id of clients disabled for area_manager
      area_supervisors:
        type: array
        items:
          "$ref": "#/definitions/fmAreaSupervisor"
        title: list of area supervisors in that area
  ListCheckResponseCheckResponse:
    type: object
    properties:
      check_id:
        type: string
        title: unique identifier for the check
      title:
        type: string
        title: title of the check
      instruction:
        type: string
        title: detail instruction of the check
      employee_id:
        type: string
        title: employee the check is assigned to
      start_time:
        type: string
        format: date-time
        title: |-
          check must start by at least this time. Start time is combination of
          appointment date and time
      check_time:
        type: string
        format: date-time
        title: |-
          checked in time for check_type=opening or checked out time for
          check_type=closing
      check_type:
        type: string
        title: |-
          check_type = opening for opening check and check_type = closing for
          closing check
      created_at:
        type: string
        format: date-time
        title: time generated by system at the instance the opening_check was created
      organization_id:
        type: string
        title: organization id of the check
    title: Check definition
  ListClientEmployeeResponseClientEmployeeResponse:
    type: object
    properties:
      client_employee_id:
        type: string
      client_id:
        type: string
        title: client the employee is assigned to
      department_id:
        type: string
        title: department of employee in the client
      designation:
        type: string
        title: designation of employee in the client
      employee_id:
        type: string
        title: employee the client is assigned to
      organization_id:
        type: string
        title: organization id of the client-employee link
      shift_contracted_day_hours:
        type: array
        items:
          "$ref": "#/definitions/fmShiftContractedDayHours"
        title: contracted hours for the day of the week
      start_date:
        type: string
        format: date-time
        title: contract start date
      end_date:
        type: string
        format: date-time
        title: contract end date
      is_head_office:
        type: boolean
        title: is employee from head office
      allow_all_clients:
        type: boolean
        title: allow access to all client
      allowed_client_ids:
        type: array
        items:
          type: string
        title: list of allowed clients
  ListClientMobilizationResponseClientMobilizationResponse:
    type: object
    properties:
      client_id:
        type: string
        title: client id for the mobilization
      category:
        type: string
        title: category of mobilization
      subject:
        type: string
        title: subject of mobilization
      message:
        type: string
        title: message for the mobilization
      by:
        "$ref": "#/definitions/fmMobilizationPrincipal"
        title: mobilization by
      to:
        "$ref": "#/definitions/fmMobilizationPrincipal"
        title: mobilization to
      date_of_mobilization:
        type: string
        format: date-time
        title: mobilization date
      client_mobilization_id:
        type: string
        title: unique id of the client mobilization
      created_at:
        type: string
        format: date-time
        title: date of mobilization creation
  ListClientResponseClientResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client
      organization_id:
        type: string
        title: organization id the client belongs to
      client_code:
        type: string
        title: client code
      name:
        type: string
        title: unique name of the client
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the client
      client_detail:
        "$ref": "#/definitions/fmClientDetail"
        title: information details of the client
      contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: |-
          Contact Person details of the client. Backend saves to
          ClientContactPersonService
      bank_account_details:
        "$ref": "#/definitions/fmBankAccountDetails"
        title: Bank account details of the client
      created_at:
        type: string
        format: date-time
        title: time the client was created at
      confidential_contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: Confidential Contact Person detail of the client
      is_head_office:
        type: boolean
        title: 'Boolean: shows wether client is head office or not'
      profile_image:
        type: string
        title: profile image of client
    title: individual client response
  ListCorrectionResponseCorrectionResponse:
    type: object
    properties:
      tasks:
        "$ref": "#/definitions/fmTimesheetResponse"
        title: list of timesheet data
      correction_date:
        type: string
        format: date-time
        title: correction time of the task report
      status:
        type: string
        title: approved or suspended
      corrected_by:
        type: string
        title: name of the person who correctes timesheet
      approved_by:
        type: string
        title: name of the person whho approves this correction
  ListDepartmentResponseDepartmentResponse:
    type: object
    properties:
      department_id:
        type: string
      title:
        type: string
      description:
        type: string
      organization_id:
        type: string
  ListDesignationResponseDesignationResponse:
    type: object
    properties:
      designation_id:
        type: string
      title:
        type: string
      department_id:
        type: string
      description:
        type: string
      organization_id:
        type: string
  ListEmployeeResponseEmployeeResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of the employee
      title:
        type: string
        title: 'title of employee : eg: Mr, Mrs, Miss'
      first_name:
        type: string
        title: first name of the employee
      middle_name:
        type: string
        title: middle_name of the employee
      last_name:
        type: string
        title: last name of the employee
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the employee
      organization_id:
        type: string
        title: organization the employee belongs to
      created_date:
        type: string
        format: date-time
        title: time the employee was created
      employee_info:
        "$ref": "#/definitions/fmEmployeeInformationForListing"
        title: Employee information
      confidential_employee_info:
        "$ref": "#/definitions/fmConfidentialEmployeeInfo"
        title: Confidential employee information
      status:
        type: string
        title: Employee status
      training_info:
        type: array
        items:
          "$ref": "#/definitions/fmTrainingEmployeeInfo"
        title: trainig Information filled by the organization
      history_info:
        type: array
        items:
          "$ref": "#/definitions/fmEmploymentHistoryInfo"
        title: employment history Information filled by the organization
      reference_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmReferenceEmployeeInfo"
        title: Reference Information about the employee
      criminal_conv_emp_info:
        type: array
        items:
          "$ref": "#/definitions/fmCriminalConvictionEmployeeInfo"
        title: Criminal Conviction Information about the employee
      next_of_keen_employee_info:
        "$ref": "#/definitions/fmNextOfKeenEmployeeInfo"
        title: Next of kee Information about the employee
      education_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmEducationEmployeeInformation"
        title: education Information about the employee
    title: individual employee record
  ListInventoryCategoryResponseInventoryCategory:
    type: object
    properties:
      organization_id:
        type: string
        title: Organization id
      category_name:
        type: string
        title: Inventory category name
      created_at:
        type: string
        format: date-time
        title: Created At
      category_detail:
        type: string
        title: Category detail
      parent_category_id:
        type: string
        title: Parent category
      status:
        type: string
        title: Status
    title: Single Inventory category
  ListInventoryItemResponseInventoryItem:
    type: object
    properties:
      organization_id:
        type: string
        title: Organization id for the item
      item_name:
        type: string
        title: Item name
      category_id:
        type: string
        title: Item Category
      category_name:
        type: string
        title: Category name
      supplier_id:
        type: string
        title: Supplier id
      unit_price:
        type: number
        format: float
        title: Unit price
      item_code:
        type: string
        title: Item code
      comment:
        type: string
        title: Comment on the item
      created_at:
        type: string
        format: date-time
        title: Created at
    title: Single inventory item
  ListJobTypeResponseJobTypeResponse:
    type: object
    properties:
      job_type_id:
        type: string
      title:
        type: string
      organization_id:
        type: string
  ListMeetingResponseMeetingResponse:
    type: object
    properties:
      meeting_id:
        type: string
        title: unique identifier of the meeting
      meeting_date:
        type: string
        format: date-time
        title: date of the meeting
      estimated_time:
        type: string
        title: duration time of the meeting
      title:
        type: string
        title: title of the meeting
      raised_by:
        type: string
        title: employee_id of employee who raised the meeting
      attendee_ids:
        type: array
        items:
          type: string
        title: attendees of  meeting
      department_id:
        type: string
        title: department id of the meeting
      organization_id:
        type: string
        title: organization id of the meeting
      created_at:
        type: string
        format: date-time
        title: timestamp at which the meeting was created
      location:
        type: string
        title: location of meeting
    title: individual meeting response
  ListOrganizationResponseOrganizationResponse:
    type: object
    properties:
      organization_id:
        type: string
        title: unique id of organization
      name:
        type: string
        title: name of organization
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the organization
      created_date:
        type: string
        format: date-time
        title: time the organization is created at
    title: inividual organization response
  ListRegionResponseRegionResponse:
    type: object
    properties:
      region_id:
        type: string
      title:
        type: string
      organization_id:
        type: string
      regional_manager:
        type: string
  ListSectorResponseSectorResponse:
    type: object
    properties:
      sector_id:
        type: string
      title:
        type: string
      description:
        type: string
      organization_id:
        type: string
  ListTaskByClientResponseTaskByClientResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique identifier of the employee involved with the client
      task_id:
        type: string
        title: |-
          unique identifier of the task completed by employee on the client in
          particular date
      start_time:
        type: string
        format: date-time
        title: |-
          task must start by at least this time. Start time is combination of
          appointment date and time
      estimate_time:
        type: string
        title: the estimated time period to complete the task
      check_in_time:
        type: string
        format: date-time
        title: check in time of the task on the particular date
      check_out_time:
        type: string
        format: date-time
        title: check out time of the task on the particular date
      title:
        type: string
        title: task title
      description:
        type: string
        title: task description
  PeriodicBudgetPBudget:
    type: object
    properties:
      name:
        type: string
      hours:
        type: number
        format: float
      amount:
        type: number
        format: float
  RecurrenceTypeDetailsMonthlyWeekDetails:
    type: object
    properties:
      week_no:
        type: string
        title: 'week no : allowed FIRST, SECOND, THIRD, FOURTH, FIFTH, LAST'
      week_days:
        type: array
        items:
          type: string
        title: 'multiple week_days name: allowed SUNDAY, MONDAY, ... SATURDAY'
  UpdateTaskByClientRequestUpdateTaskByClient:
    type: object
    properties:
      task_id:
        type: string
        title: unique id of the task
      check_in_time:
        type: string
        format: date-time
        title: time the task was checked in
      check_out_time:
        type: string
        format: date-time
        title: time the task was checked out
      contracted_hours:
        type: string
        title: contracted hours of the employee with the client
  UpdateTaskByEmployeeRequestUpdateTaskByEmployee:
    type: object
    properties:
      task_id:
        type: string
        title: unique id of the task
      check_in_time:
        type: string
        format: date-time
        title: time the task was checked in
      check_out_time:
        type: string
        format: date-time
        title: time the task was checked out
      contracted_hours:
        type: string
        title: contracted hours of the employee with the client
  fmAddAgendaDecisionObjectionRequest:
    type: object
    properties:
      agenda_decision_id:
        type: string
        title: id of decision
      agenda_id:
        type: string
        title: id of agenda
      meeting_id:
        type: string
        title: id of meeting
      objection:
        type: string
        title: string objection of decision
      objection_by:
        type: string
        title: objection done by
      created_at:
        type: string
        format: date-time
        title: objection created date
  fmAddAgendaDecisionRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: id of meeting
      agenda_id:
        type: string
        title: id of agenda
      decision:
        type: string
        title: string decision of agenda
      action_by:
        type: string
        title: action to be taken by
      deadline_date:
        type: string
        format: date-time
        title: deadline for action to be taken
  fmAddAgendaViewRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: id of meeting
      agenda_id:
        type: string
        title: id of agenda
      proposed_by:
        type: string
        title: 'view proposed by : employee_id'
      description:
        type: string
        title: details
  fmAddAttendeesRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: id of meeting
      invitee_ids:
        type: array
        items:
          type: string
        title: employee ids of additional attendees
  fmAgenda:
    type: object
    properties:
      title:
        type: string
        title: title of agenda
      description:
        type: string
        title: description of agenda
      proposed_by:
        type: string
        title: id of the employee that proposed the agenda
      estimated_time:
        type: string
        title: estimated time to discuss the agenda
  fmAgendaDecision:
    type: object
    properties:
      id:
        type: string
        title: id of agenda decisions
      agenda_id:
        type: string
        title: agenda it belongs to
      decision:
        type: string
        title: decision details
      action_by:
        type: string
        title: 'view proposed by : employee_id'
      deadline:
        type: string
        format: date-time
        title: deadline to take action
      agenda_decision_objections:
        type: array
        items:
          "$ref": "#/definitions/fmAgendaDecisionObjection"
        title: objections of decisions of agenda
    title: details of decisions within an agenda
  fmAgendaDecisionObjection:
    type: object
    properties:
      id:
        type: string
        title: id of objection of decision
      agenda_decision_id:
        type: string
        title: id of decision of agenda
      agenda_id:
        type: string
        title: agenda it belongs to
      objection:
        type: string
        title: objection details
      objection_by:
        type: string
        title: 'objection done by : employee_id'
      created_at:
        type: string
        format: date-time
        title: objection created date
    title: details of objection of decision made for an agenda
  fmAgendaDetail:
    type: object
    properties:
      id:
        type: string
        title: id of agenda
      title:
        type: string
        title: title of agenda
      description:
        type: string
        title: description of agenda
      proposed_by:
        type: string
        title: id of the employee that proposed the agenda
      estimated_time:
        type: string
        title: estimated time to discuss the agenda
      start_time:
        type: string
        format: date-time
        title: start time of agenda
      end_time:
        type: string
        format: date-time
        title: end time of agenda
      agenda_views:
        type: array
        items:
          "$ref": "#/definitions/fmAgendaView"
        title: views of agenda
      agenda_decisions:
        type: array
        items:
          "$ref": "#/definitions/fmAgendaDecision"
        title: decisions of agenda
    title: Agenda details with complete info on views/decisions/objections
  fmAgendaTimerRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: id of meeting
      agenda_id:
        type: string
        title: id of agenda
      action:
        type: string
        title: 'timer - action : Allowed values ["START","STOP"]'
      action_time:
        type: string
        format: date-time
        title: action time
  fmAgendaTimerResponse:
    type: object
    properties:
      agenda_id:
        type: string
        title: agenda id
  fmAgendaUpdateDetail:
    type: object
    properties:
      agenda_id:
        type: string
        title: id of agenda for update
      title:
        type: string
        title: title of agenda
      description:
        type: string
        title: description of agenda
      proposed_by:
        type: string
        title: id of the employee that proposed the agenda
      estimated_time:
        type: string
        title: estimated time to discuss the agenda
  fmAgendaView:
    type: object
    properties:
      id:
        type: string
        title: id of agenda view
      agenda_id:
        type: string
        title: agenda it belongs to
      proposed_by:
        type: string
        title: 'view proposed by : employee_id'
      description:
        type: string
        title: details
      created_at:
        type: string
        format: date-time
        title: created date
      delete_history:
        type: array
        items:
          type: string
        title: delete history
    title: details of Views within an agenda
  fmArea:
    type: object
    properties:
      total_area:
        type: string
      area:
        type: string
      area_manager:
        type: string
        title: Area manager employee_id
  fmAreaSupervisor:
    type: object
    properties:
      area_supervisor:
        type: string
        title: id of area supervisor (employee-id)
      allowed_client_ids:
        type: array
        items:
          type: string
        title: list of allowed clients
  fmAssignClientEmployeeShiftRequest:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique id of client employee relation
      shift:
        type: string
        title: shift of the employee for the client
      shift_time:
        type: string
        title: shift time of the employee for the client
      organization_id:
        type: string
        title: organization id of the client employee relation
    title: Request for client-employee shift assignment
  fmAssignClientEmployeeShiftResponse:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique id of client employee relation
    title: Response for client-employee shift assignment
  fmAssignContractedHoursRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: organization id of the client employee relation
      client_employee_id:
        type: string
        title: unique id of client employee relation
      department_id:
        type: string
        title: department of employee
      designation:
        type: string
        title: designation of employee in the client
      shift_contracted_day_hours:
        type: array
        items:
          "$ref": "#/definitions/fmShiftContractedDayHours"
        title: multiple shift for employee in a single client
      start_date:
        type: string
        format: date-time
        title: contract start date
      end_date:
        type: string
        format: date-time
        title: contract end date
      is_head_office:
        type: boolean
        title: is employee from head office
      allow_all_clients:
        type: boolean
        title: allow access to all client
      allowed_client_ids:
        type: array
        items:
          type: string
        title: list of allowed clients
  fmAssignContractedHoursResponse:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique id of client employee relation
  fmAssignTargetTasksRequest:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique identifier for the client employee relation
      start_date:
        type: string
        format: date-time
        title: start date for target tasks
      end_date:
        type: string
        format: date-time
        title: end date for target tasks
      weekly_target_tasks:
        type: object
        additionalProperties:
          type: string
          format: int64
        title: The target tasks for the 7 days
    title: Request for assigning target tasks to an employee
  fmAssignTargetTasksResponse:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique identifier for the client employee relation
    title: Response for assigning target tasks to an employee
  fmAssociateWithEmployeeRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: id the employee to associate
      user_id:
        type: string
        title: user_id to associate
      roles:
        type: array
        items:
          type: string
        title: roles for this association
      scopes:
        type: array
        items:
          type: string
        title: scopes for this association
      organization_id:
        type: string
        title: id of organization
  fmBankAccountDetails:
    type: object
    properties:
      bank_name:
        type: string
        title: Name of the bank
      branch_name:
        type: string
        title: Branch name
      account_number:
        type: string
        title: Account number
      s_code:
        type: string
        title: some code
      account_holder_name:
        type: string
        title: account holder name
    title: Bank accounts details collection
  fmBudget:
    type: object
    properties:
      labour_budget:
        "$ref": "#/definitions/fmLabourBudget"
      store_budget:
        "$ref": "#/definitions/fmStoreBudget"
      periodic_budget:
        "$ref": "#/definitions/fmPeriodicBudget"
      hourly_rate:
        type: number
        format: float
  fmChangeTimesheetCorrectionStatusRequest:
    type: object
    properties:
      timesheet_correction_id:
        type: string
        title: timesheet correction id
      status:
        type: string
        title: Status to change to either `PENDING`, `APPROVED`, `REJECTED`
  fmChangeTimesheetCorrectionStatusResponse:
    type: object
    properties:
      timesheet_correction_id:
        type: string
        title: timesheet correcetion id
  fmCheckInOutRequest:
    type: object
    properties:
      check_id:
        type: string
        title: check in or out to particular check item with check_id
    title: Request for checking in to opening_check and checking out to closing_check
  fmCheckinTaskRequest:
    type: object
    properties:
      task_id:
        type: string
    title: Request for checking in to task
  fmCheckoutTaskRequest:
    type: object
    properties:
      task_id:
        type: string
        title: id of the task to checkout
    title: Request for checking out from task
  fmClientAddAttachmentRequest:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client
      attachment_path:
        type: string
        title: path of attachment
      attachment_type:
        type: string
        title: type of attachment
      uploaded_by:
        type: string
        title: uploaded by
  fmClientAddAttachmentResponse:
    type: object
    properties:
      attachment_id:
        type: string
        title: unique identifier of the newly created attachment record
  fmClientChangeStatusRequest:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client
      status:
        type: string
        title: status to change to
      client_code:
        type: string
        title: unique code of client
      client_date:
        "$ref": "#/definitions/fmCreateClientDate"
        title: required dates of client
    title: Request for changing status of client
  fmClientChangeStatusResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client
  fmClientDate:
    type: object
    properties:
      start_date:
        type: string
        format: date-time
        title: Start of the contract with the client
      end_date:
        type: string
        format: date-time
        title: End of the contract with the client
      effective_date:
        type: string
        format: date-time
      last_review_date:
        type: string
        format: date-time
      renew_date:
        type: string
        format: date-time
        title: Date in which client contract is expected to be renewed next time
  fmClientDetail:
    type: object
    properties:
      area:
        "$ref": "#/definitions/fmArea"
        title: Area
      sector:
        type: string
      reason_for_costing:
        type: string
      date:
        "$ref": "#/definitions/fmClientDate"
      contracted_day_hours:
        type: array
        items:
          "$ref": "#/definitions/fmContractedHours"
        title: Contracted hours
      status:
        type: string
        title: |-
          This field is only used in list and detail API
          Other APIs will ignore this field
      site_supervisor_id:
        type: string
        title: Site supervisor aka client supervisor
      site_supervisor_email:
        type: string
      site_supervisor_phone:
        type: string
      region:
        "$ref": "#/definitions/fmRegion"
        title: Region
      budget:
        "$ref": "#/definitions/fmBudget"
        title: Budgets
      client_code:
        type: string
        title: client code
      invoice:
        type: array
        items:
          "$ref": "#/definitions/fmInvoice"
        title: Invoice
      yearly_working_weeks:
        type: integer
        format: int32
        title: Working weeks in a year
  fmClientDetailResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client
      organization_id:
        type: string
        title: organization id the client belongs to
      name:
        type: string
        title: unique name of the client
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact detail of the client
      created_at:
        type: string
        format: date-time
        title: time the client was created at
      client_detail:
        "$ref": "#/definitions/fmClientDetail"
        title: information details of the client
      confidential_contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: |-
          Confidential contact person details of the client. Backend saves to
          ClientContactPersonService
      bank_account_details:
        "$ref": "#/definitions/fmBankAccountDetails"
        title: Bank account details of the client
      contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: |-
          List of contact perople details of the client. Backend saves to
          ClientContactPersonService
      is_head_office:
        type: boolean
        title: 'Boolean: shows wether client is head office or not'
      profile_image:
        type: string
        title: profile image of client
    title: Response for client detail
  fmClientListAttachmentResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client
      attachments:
        type: array
        items:
          "$ref": "#/definitions/ClientListAttachmentResponseClientAttachmentPayload"
        title: list of attachments
  fmClientSetHeadOfficeRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: organization id
      head_office_client_id:
        type: string
        title: id of client which is to be set to head offfice
  fmClientSetHeadOfficeResponse:
    type: object
    properties:
      head_office_client_id:
        type: string
        title: id of client which is to be set to head offfice
  fmConfidentialEmployeeDetails:
    type: object
    properties:
      dob:
        type: string
        title: date of birth
      national_insurance_number:
        type: string
        title: National insurance number
      tax_code:
        type: string
        title: Tax code
    title: General Confidential Employee Details
  fmConfidentialEmployeeInfo:
    type: object
    properties:
      employee_details:
        "$ref": "#/definitions/fmConfidentialEmployeeDetails"
        title: Employee details
      bank_account_details:
        "$ref": "#/definitions/fmEmployeeBankAccountDetails"
        title: Bank details
    title: Confidential Employee information
  fmContactDetail:
    type: object
    properties:
      email:
        type: string
        title: email address
      phone:
        type: string
        title: phone number
      address:
        "$ref": "#/definitions/ContactDetailAddress"
        title: address
      mobile:
        type: string
        title: Mobile phone number
      website:
        type: string
        title: website of the contact
      contact_no:
        type: string
        title: |-
          contact number
          NOTE: creating and not deleting older fields for backward compatibility
  fmContactPerson:
    type: object
    properties:
      name:
        type: string
      designation:
        type: string
      email:
        type: string
      phone:
        type: string
      mobile:
        type: string
      position:
        type: string
  fmContractedHours:
    type: object
    properties:
      job_type_id:
        type: string
        title: |-
          NOTE: even though this is not used currently,
          we will not be removing this field because it might be added
          again soon
      start_time:
        type: string
        format: date-time
        title: Start time of shifts in the client
      end_time:
        type: string
        format: date-time
        title: End time of shifts in the client
      shift_name:
        type: string
        title: Some name for the shift like morning, evening
  fmCoverResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: Employee id of employee who has requested a leave/holiday
      leave_from_date:
        type: string
        format: date-time
        title: Leave from date
      leave_to_date:
        type: string
        format: date-time
        title: Leave upto date
      covered_by_employee_id:
        type: string
        title: The employee who will be covering the absentee employee
      client_id:
        type: string
        title: Client at which the employee is taking a lave
      status:
        type: string
        title: Status of the holiday request
      created_at:
        type: string
        format: date-time
        title: The timestamp at which holiday record was created
      organization_id:
        type: string
        title: Organization id of the employee
      leave_id:
        type: string
        title: leave id
      leave_type:
        type: string
        title: leave type
    title: Single cover Payload
  fmCreateAreaRequest:
    type: object
    properties:
      title:
        type: string
        title: title of area
      organization_id:
        type: string
        title: organization for the area
      region_id:
        type: string
        title: region that area belongs to
      area_manager:
        type: string
        title: id of area manager (employee-id)
      areamanager_restricted_clients:
        type: array
        items:
          type: string
        title: id of clients disabled for area_manager
  fmCreateCheckRequest:
    type: object
    properties:
      title:
        type: string
        title: title of the check
      instruction:
        type: string
        title: detail instruction of the opening_check
      employee_id:
        type: string
        title: employee the opening_check is assigned to
      check_type:
        type: string
        title: |-
          check_type = opening for opening check and check_type = closing for closing
          check
      start_time:
        type: string
        format: date-time
        title: |-
          check must start by at least this time. Start time is combination of
          appointment date and time
      organization_id:
        type: string
        title: organization id
    title: Request to create check
  fmCreateCheckResponse:
    type: object
    properties:
      check_id:
        type: string
        title: unique id of the check
    title: Response from create check
  fmCreateClientDate:
    type: object
    properties:
      start_date:
        type: string
        format: date-time
        title: Start of the contract with the client
      end_date:
        type: string
        format: date-time
        title: End of the contract with the client
      effective_date:
        type: string
        format: date-time
      renew_date:
        type: string
        format: date-time
        title: Date in which client contract is expected to be renewed next time
  fmCreateClientDetail:
    type: object
    properties:
      area:
        "$ref": "#/definitions/fmArea"
        title: Area
      sector:
        type: string
      reason_for_costing:
        type: string
      date:
        "$ref": "#/definitions/fmCreateClientDate"
      contracted_day_hours:
        type: array
        items:
          "$ref": "#/definitions/fmContractedHours"
        title: Contracted hours
      site_supervisor_id:
        type: string
        title: Site supervisor aka client supervisor
      site_supervisor_email:
        type: string
      site_supervisor_phone:
        type: string
      region:
        "$ref": "#/definitions/fmRegion"
        title: Region
      budget:
        "$ref": "#/definitions/fmBudget"
        title: Budgets
      invoice:
        type: array
        items:
          "$ref": "#/definitions/fmInvoice"
        title: Invoice
      yearly_working_weeks:
        type: integer
        format: int32
        title: Working weeks in a year
  fmCreateClientEmployeeRequest:
    type: object
    properties:
      client_id:
        type: string
        title: client the employee is assigned to
      employee_id:
        type: string
        title: employee the client is assigned to
      department_id:
        type: string
        title: department of employee
      designation:
        type: string
        title: designation of employee in the client
      organization_id:
        type: string
        title: organization id of the client employee relation
      shift_contracted_day_hours:
        type: array
        items:
          "$ref": "#/definitions/fmShiftContractedDayHours"
        title: multiple shift for employee in a single client
      start_date:
        type: string
        format: date-time
        title: contract start date
      end_date:
        type: string
        format: date-time
        title: contract end date
      is_head_office:
        type: boolean
        title: is employee from head office
      allow_all_clients:
        type: boolean
        title: allow access to all client
      allowed_client_ids:
        type: array
        items:
          type: string
        title: list of allowed clients
  fmCreateClientEmployeeResponse:
    type: object
    properties:
      client_employee_id:
        type: string
  fmCreateClientMobilizationRequest:
    type: object
    properties:
      client_id:
        type: string
        title: client id for the mobilization
      category:
        type: string
        title: category of mobilization
      subject:
        type: string
        title: subject of mobilization
      message:
        type: string
        title: message for the mobilization
      by:
        "$ref": "#/definitions/fmMobilizationPrincipal"
        title: mobilization by
      to:
        "$ref": "#/definitions/fmMobilizationPrincipal"
        title: mobilization to
      date_of_mobilization:
        type: string
        format: date-time
        title: mobilization date
    title: Request to create client mobilization
  fmCreateClientMobilizationResponse:
    type: object
    properties:
      client_mobilization_id:
        type: string
        title: unique id of the mobilization
    title: Response for client mobilization creation
  fmCreateClientRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: id of the organization this client belongs to
      name:
        type: string
        title: unique name of the client
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the client
      client_detail:
        "$ref": "#/definitions/fmCreateClientDetail"
        title: information details of the client
      contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: |-
          Contact people details of the client. Backend saves to
          ClientContactPersonService
      bank_account_details:
        "$ref": "#/definitions/fmBankAccountDetails"
        title: Bank account details
      confidential_contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: Confidential Contact Person detail of the client
      client_code:
        type: string
        title: unique code of client within the organization
      profile_image:
        type: string
        title: profile image of client
  fmCreateClientResponse:
    type: object
    properties:
      client_id:
        type: string
    title: Response for create client requests
  fmCreateDepartmentRequest:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      organization_id:
        type: string
  fmCreateDepartmentResponse:
    type: object
    properties:
      department_id:
        type: string
  fmCreateDesignationRequest:
    type: object
    properties:
      title:
        type: string
        title: job title. eg, manager, supervisor, cleaner
      department_id:
        type: string
        title: |-
          this gives information about the department under which the designation
          falls
      description:
        type: string
        title: admin can add brief details about the designation, if required
      organization_id:
        type: string
        title: designation is at organization level and also it is used for authentication
  fmCreateDesignationResponse:
    type: object
    properties:
      designation_id:
        type: string
  fmCreateEmployeeRequest:
    type: object
    properties:
      title:
        type: string
        title: 'title of employee, EG: Mr, Mrs, Miss'
      first_name:
        type: string
        title: First Name of the employee
      middle_name:
        type: string
        title: Middle name of the employee
      last_name:
        type: string
        title: Last name of the employee
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the employee
      organization_id:
        type: string
        title: organization the employee belongs to
      employee_code:
        type: string
        format: int64
        title: unique employee code for organization
      employee_info:
        "$ref": "#/definitions/fmEmployeeInformationForUpsert"
        title: Employee information
      confidential_employee_info:
        "$ref": "#/definitions/fmConfidentialEmployeeInfo"
        title: Confidential Information about the employee
      training_info:
        type: array
        items:
          "$ref": "#/definitions/fmTrainingEmployeeInfo"
        title: trainig Information filled by the organization
      history_info:
        type: array
        items:
          "$ref": "#/definitions/fmEmploymentHistoryInfo"
        title: employment history Information filled by the organization
      reference_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmReferenceEmployeeInfo"
        title: Reference Information about the employee
      criminal_conv_emp_info:
        type: array
        items:
          "$ref": "#/definitions/fmCriminalConvictionEmployeeInfo"
        title: Criminal Conviction Information about the employee
      next_of_keen_employee_info:
        "$ref": "#/definitions/fmNextOfKeenEmployeeInfo"
        title: Next of kee Information about the employee
      education_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmEducationEmployeeInformation"
        title: education Information about the employee
    title: request to create new employee
  fmCreateEmployeeResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of the employee
    title: response returned when reating employee
  fmCreateEmployeeSickRequest:
    type: object
    properties:
      client_id:
        type: string
        title: unique Id of client for which employee is working for
      employee_id:
        type: string
        title: unique Id of employee
      sick_period:
        "$ref": "#/definitions/fmSickPeriod"
        title: period of requested sick
      covered_by_employee_id:
        type: string
        title: covered by employee id
      payment:
        type: string
        title: is sick leave paid or unpaid
      comment:
        type: string
        title: comment reason for leave
      organization_id:
        type: string
        title: unique Id of organization for which employee is working for
      sick_entitlement:
        type: string
        title: total number of sick days in a year
      remaining_sick_entitlement:
        type: string
        title: remaining sick entitlement
    title: Request for creating sick of employee
  fmCreateEmployeeSickResponse:
    type: object
    properties:
      employee_sick_id:
        type: string
        title: unique id of employee sick
    title: Response fro sick creation success
  fmCreateEmployeeTrainingRequest:
    type: object
    properties:
      trainee_id:
        type: string
        title: Unique id of trainee employee
      trainer_id:
        type: string
        title: Unique id of trainer employee
      training_subject:
        type: string
        title: Subject of the training
      training_date:
        type: string
        format: date-time
        title: Date of the training
      attachment_file:
        type: string
        title: Attachment file regarding training
      client_id:
        type: string
        title: Unique id for the client
      organization_id:
        type: string
        title: organization id of the employee working for client
    title: Request to create employee training
  fmCreateEmployeeTrainingResponse:
    type: object
    properties:
      employee_training_id:
        type: string
        title: Unique id of the training for employee
    title: Response for creating employee training
  fmCreateFeedbackRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of employee
      client_id:
        type: string
        title: unique id of client who is providing feedback
      sector:
        type: string
        title: sector of employee
      department_id:
        type: string
        title: unique id of department
      rating:
        type: string
        title: provided rating
      feedback_comments:
        type: string
        title: provided feedback comments
      organization_id:
        type: string
        title: organization id
  fmCreateFeedbackResponse:
    type: object
    properties:
      feedback_id:
        type: string
        title: unique id of feedback
  fmCreateHolidayRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: Employee id of employee who has requested a leave/holiday
      leave_from_date:
        type: string
        format: date-time
        title: Leave from date
      leave_to_date:
        type: string
        format: date-time
        title: Leave upto date
      covered_by_employee_id:
        type: string
        title: The employee who will be covering the absentee employee
      client_id:
        type: string
        title: Client at which the employee is taking a lave
      organization_id:
        type: string
        title: Organization id of the employee
    title: Request for creating a holiday for an employee
  fmCreateHolidayResponse:
    type: object
    properties:
      holiday_id:
        type: string
        title: holiday id
    title: Response for holiday creation success
  fmCreateInventoryCategoryRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: Organization id for the category
      category_name:
        type: string
        title: Category name
      category_detail:
        type: string
        title: Category detail
      parent_category_id:
        type: string
        title: Parent category id
      status:
        type: string
        title: Status
    title: Request to create a new inventory item category
  fmCreateInventoryCategoryResponse:
    type: object
    properties:
      inventory_category_id:
        type: string
        title: Inventory category id
    title: Response for successful creation of a inventory category
  fmCreateInventoryItemRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: Organization id for the item
      item_name:
        type: string
        title: Item name
      category_id:
        type: string
        title: Item Category
      supplier_id:
        type: string
        title: Supplier id
      unit_price:
        type: number
        format: float
        title: Unit price
      item_code:
        type: string
        title: Item code
      comment:
        type: string
        title: Comment on the item
    title: Request to create inventory item
  fmCreateInventoryItemResponse:
    type: object
    properties:
      inventory_item_id:
        type: string
        title: Inventory item id
    title: Response after successfull creation of inventory item
  fmCreateIssueRequest:
    type: object
    properties:
      raised_by:
        type: string
        title: id of the user raising the issue
      assigned_to:
        type: string
        title: id of the user responsible for solving the issue
      details:
        type: string
        title: details of the isssue
      deadline:
        type: string
        format: date-time
        title: deadline of solving the issue
      organization_id:
        type: string
        title: unique id of the organization
      department_id:
        type: string
        title: unique id of the department
    title: Create issue request
  fmCreateIssueResponse:
    type: object
    properties:
      issue_id:
        type: string
        title: unique id of the issue
    title: Create issue response
  fmCreateJobTypeRequest:
    type: object
    properties:
      title:
        type: string
      organization_id:
        type: string
  fmCreateJobTypeResponse:
    type: object
    properties:
      job_type_id:
        type: string
  fmCreateMeetingRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: id of the organization this meeting belongs to
      meeting_date:
        type: string
        format: date-time
        title: date of the meeting
      estimated_time:
        type: string
        title: estimated time of the meeting
      department_id:
        type: string
        title: id of department of generated meeting
      raised_by:
        type: string
        title: id of employee owho raised the meeting
      attendee_ids:
        type: array
        items:
          type: string
        title: ids of employees who attend the  meetings
      agendas:
        type: array
        items:
          "$ref": "#/definitions/fmAgenda"
        title: information of agenda of the meetong
      client_id:
        type: string
        title: required if meeting is for client else it is optional
      title:
        type: string
        title: title of the meeting
      location:
        type: string
        title: location of meeting
    title: Meeting creation request
  fmCreateMeetingResponse:
    type: object
    properties:
      meeting_id:
        type: string
    title: Response for create meeting requests
  fmCreateNoteRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: id of the organization this note belongs to
      created_by:
        type: string
        title: id of the note creater
      for:
        type: array
        items:
          type: string
        title: notes for
      notes:
        type: string
        title: notes detail
      note_date:
        type: string
        format: date-time
        title: note date
    title: Create note request
  fmCreateNoteResponse:
    type: object
    properties:
      note_id:
        type: string
        title: unique id of the created note
    title: Create note response
  fmCreateOrganizationRequest:
    type: object
    properties:
      name:
        type: string
        title: name of the organization
      contact_details:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the organization
  fmCreateOrganizationResponse:
    type: object
    properties:
      organization_id:
        type: string
        title: unique id of the organization
    title: response when creating new organization
  fmCreateRegionRequest:
    type: object
    properties:
      title:
        type: string
        title: title of region
      organization_id:
        type: string
        title: id of organization
      regional_manager:
        type: string
        title: signle region manager
  fmCreateSectorRequest:
    type: object
    properties:
      title:
        type: string
      description:
        type: string
      organization_id:
        type: string
  fmCreateSectorResponse:
    type: object
    properties:
      sector_id:
        type: string
  fmCreateTaskRequest:
    type: object
    properties:
      title:
        type: string
        title: title (name) of the task
      description:
        type: string
        title: description of the task
      client_id:
        type: string
        title: client the task is associated with. Optional
      employee_id:
        type: string
        title: employee the task is assigned to
      start_time:
        type: string
        format: date-time
        title: |-
          task must start by at least this time. Start time is combination of
          appointment date and time
      estimate_time:
        type: string
        title: the estimated time period to complete the task
      organization_id:
        type: string
        title: the organization of the employee
      is_variation:
        type: boolean
        title: flag to confirm if the task is variation or not
      is_recurrence:
        type: boolean
        title: wether task is recurrence
      recurrence:
        "$ref": "#/definitions/fmUpsertRecurrence"
        title: details of recurrence
    title: Request to create task
  fmCreateTaskResponse:
    type: object
    properties:
      task_id:
        type: string
        title: unique id of the task
    title: Response from create task
  fmCreateTransferRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of employee to transfer
      department_id:
        type: string
        title: new department id
      from_client_id:
        type: string
        title: unique id of client from which employee is transfered
      to_client_id:
        type: string
        title: unique id of client to which employee is transfered
      transfer_date:
        type: string
        format: date-time
        title: effective date of transfer
      transfer_reason:
        type: string
        title: reason of employee transfer
      sector:
        type: string
        title: new sector
      organization_id:
        type: string
        title: organization id
  fmCreateTransferResponse:
    type: object
    properties:
      transfer_id:
        type: string
        title: unique id of employee transfer
  fmCreateUserOnEmployeeCreateRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: id of organization
      email:
        type: string
        title: email of user
      name:
        type: string
        title: name of user
  fmCreateUserOnEmployeeCreateResponse:
    type: object
    properties:
      user_id:
        type: string
        title: id of user
  fmCreateUserRequest:
    type: object
    properties:
      username:
        type: string
        title: username of the user
      password:
        type: string
        title: |-
          this password is never stored in the server. the hash is calculated and
          stored in the pwd store
      name:
        type: string
        title: Name of the user
  fmCreateUserResponse:
    type: object
    properties:
      user_id:
        type: string
        title: id of the created user
    title: response for create user requests
  fmCriminalConvictionEmployeeInfo:
    type: object
    properties:
      is_subject_to_conditions:
        type: boolean
        title: yes or no
      details:
        type: string
        title: details
      signature:
        type: string
        title: signature file upload
      signature_text:
        type: string
        title: signature text
      have_prior_medical_condition:
        type: boolean
        title: have_prior_medical_condition of criminal conviction or not
      condition_details:
        type: string
        title: prior_medical_condition details
      is_disable:
        type: boolean
        title: is_disable
      disable_details:
        type: string
        title: disablity details
      adaptation_for_interview:
        type: string
        title: adaptation_for_interview
    title: CriminalConviction employee information
  fmDbsDetails:
    type: object
    properties:
      dbs_number:
        type: string
        title: DBS number
      dbs_start_date:
        type: string
        format: date-time
        title: DBS start date
      dbs_review_date:
        type: string
        format: date-time
        title: DBS next review date
      dbs_expiry_date:
        type: string
        format: date-time
        title: DBS expiry date
    title: Dbs details of employee
  fmDeleteAgendaDecisionObjectionRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: id of meeting
      decision_objection_id:
        type: string
        title: id of objection of a decision
  fmDeleteAgendaViewRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: id of meeting
      agenda_view_id:
        type: string
        title: id of agenda
  fmDeleteDepartmentRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: organization_id to which the department belongs to
      department_id:
        type: string
        title: department_id of department to be deleted
  fmDeleteDesignationRequest:
    type: object
    properties:
      designation_id:
        type: string
        title: designation_id of designation to be deleted
      department_id:
        type: string
        title: department_id to which the designation belongs to
      organization_id:
        type: string
        title: organization_id to which the designation belongs to
  fmDeleteSectorRequest:
    type: object
    properties:
      sector_id:
        type: string
        title: sector_id of sector to be deleted
      organization_id:
        type: string
        title: organization_id to which the sector belongs to
  fmDetailMeetingResponse:
    type: object
    properties:
      meeting_id:
        type: string
        title: unique identifier of the meeting
      meeting_date:
        type: string
        format: date-time
        title: date of the meeting
      estimated_time:
        type: string
        title: duration time of the meeting
      title:
        type: string
        title: title of the meeting
      raised_by:
        type: string
        title: employee_id of employee who raised the meeting
      attendee_ids:
        type: array
        items:
          type: string
        title: attendees of  meeting
      department_id:
        type: string
        title: department id of the meeting
      organization_id:
        type: string
        title: organization id of the meeting
      created_at:
        type: string
        format: date-time
        title: timestamp at which the meeting was created
      location:
        type: string
        title: location of meeting
      status:
        type: string
        title: status of meeting
      agenda_details:
        type: array
        items:
          "$ref": "#/definitions/fmAgendaDetail"
        title: agendas of meeting along with views/decisions
  fmEditAgendaViewRequest:
    type: object
    properties:
      agenda_view_id:
        type: string
        title: id of agenda-view
      meeting_id:
        type: string
        title: id of meeting
      agenda_id:
        type: string
        title: id of agenda
      description:
        type: string
        title: details
  fmEducationEmployeeInformation:
    type: object
    properties:
      place_of_edu:
        type: string
        title: place of education of the employee
      study_date:
        type: string
        format: date-time
        title: education started date
      qualification:
        type: string
        title: qualificatioin ofemp
      date_obtained:
        type: string
        format: date-time
        title: education graduated date
    title: education information of emp
  fmEmployeeAddAttachmentRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: unique identifier of the employee
      attachment_path:
        type: string
        title: path of attachment
      attachment_type:
        type: string
        title: type of attachment
      attachment_name:
        type: string
        title: name of attachment
      uploaded_by:
        type: string
        title: uploaded by
    title: Request payload to add attachment to an employee
  fmEmployeeAddAttachmentResponse:
    type: object
    properties:
      attachment_id:
        type: string
        title: unique identifier of the newly created attachment record
    title: Success response payload after adding attachment to an employee
  fmEmployeeBankAccountDetails:
    type: object
    properties:
      bank_name:
        type: string
        title: Name of the bank
      branch_name:
        type: string
        title: Branch name
      account_number:
        type: string
        title: Account number
      s_code:
        type: string
        title: some code
      account_holder_name:
        type: string
        title: account holder name
      signature:
        type: string
        title: signature photo url
      signature_text:
        type: string
        title: signature_text
    title: Employee Bank accounts details collection
  fmEmployeeDeleteAttachmentRequest:
    type: object
    properties:
      attachment_id:
        type: string
        title: unique identifier for an attachment
      employee_id:
        type: string
        title: unique identifier for an employee
    title: Request payload for deleting attachment of an employee
  fmEmployeeDeleteAttachmentResponse:
    type: object
    properties:
      attachment_id:
        type: string
    title: Success response after deleting an attachment of an employee
  fmEmployeeDetailResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique identifier of the employee
      title:
        type: string
        title: title of employee
      first_name:
        type: string
        title: first name of the employee
      middle_name:
        type: string
        title: middle name of the employee
      last_name:
        type: string
        title: last name of the employee
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact detail of the employee
      organization_id:
        type: string
        title: organization id the employee belongs to
      created_date:
        type: string
        format: date-time
        title: time the employee was created at
      activated_at:
        type: string
        format: date-time
        title: Activated date
      employee_info:
        "$ref": "#/definitions/fmEmployeeInformationForListing"
        title: Employee information
      confidential_employee_info:
        "$ref": "#/definitions/fmConfidentialEmployeeInfo"
        title: Confidential Information about the employee
      training_info:
        type: array
        items:
          "$ref": "#/definitions/fmTrainingEmployeeInfo"
        title: trainig Information filled by the organization
      history_info:
        type: array
        items:
          "$ref": "#/definitions/fmEmploymentHistoryInfo"
        title: employment history Information filled by the organization
      reference_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmReferenceEmployeeInfo"
        title: Reference Information about the employee
      criminal_conv_emp_info:
        type: array
        items:
          "$ref": "#/definitions/fmCriminalConvictionEmployeeInfo"
        title: Criminal Conviction Information about the employee
      next_of_keen_employee_info:
        "$ref": "#/definitions/fmNextOfKeenEmployeeInfo"
        title: Next of kee Information about the employee
      education_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmEducationEmployeeInformation"
        title: education Information about the employee
      status:
        type: string
        title: fetch employees of this status
    title: Response for employee detail
  fmEmployeeInformationForListing:
    type: object
    properties:
      general:
        "$ref": "#/definitions/fmGeneralEmployeeInformation"
        title: general information of the employee
      official:
        "$ref": "#/definitions/fmOfficialEmployeeInformationForListing"
        title: official information of the employee
      hm_revenue_details:
        "$ref": "#/definitions/fmHmRevenueDetails"
        title: HM revenue information
    title: Employee information for list, detail endpoints
  fmEmployeeInformationForUpsert:
    type: object
    properties:
      general:
        "$ref": "#/definitions/fmGeneralEmployeeInformation"
        title: general information of the employee
      official:
        "$ref": "#/definitions/fmOfficialEmployeeInformationForUpsert"
        title: official information of the employee
      hm_revenue_details:
        "$ref": "#/definitions/fmHmRevenueDetails"
        title: HM revenue information
    title: Employee information for upsert(create/update) endpoints
  fmEmployeeLeaverResponse:
    type: object
    properties:
      leave_id:
        type: string
        title: unique id of the leave
      client_id:
        type: string
        title: fetch leaver employees this client_id belongs to
      employee_id:
        type: string
        title: unique id of employee
      organization_id:
        type: string
        title: fetch leaver employees this organization_id belongs to
      leave_from_date:
        type: string
        format: date-time
        title: Leave from date
      leave_to_date:
        type: string
        format: date-time
        title: Leave upto date
      status:
        type: string
        title: Status of the leave request
      leave_type:
        type: string
        title: leave type
      leave_reason:
        type: string
        title: leave reason
      created_at:
        type: string
        format: date-time
        title: The timestamp at which leave record was created
  fmEmployeeListAttachmentResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique identifier of the employee
      attachments:
        type: array
        items:
          "$ref": "#/definitions/EmployeeListAttachmentResponseEmployeeAttachmentPayload"
        title: list of attachments
    title: Response payload for attachment list request
  fmEmployeeSickResponse:
    type: object
    properties:
      employee_sick_id:
        type: string
        title: unique id of employee sick
      client_id:
        type: string
        title: unique Id of client for which employee is working for
      employee_id:
        type: string
        title: unique Id of employee
      sick_period:
        "$ref": "#/definitions/fmSickPeriod"
        title: period of requested sick
      covered_by_employee_id:
        type: string
        title: covered by employee id
      payment:
        type: string
        title: is sick leave paid or unpaid
      comment:
        type: string
        title: comment reason for leave
      status:
        type: string
        title: status of request
      sick_entitlement:
        type: string
        title: total number of sick days in a year
      remaining_sick_entitlement:
        type: string
        title: remaining sick entitlement
      prev_sick_period:
        type: array
        items:
          "$ref": "#/definitions/fmSickPeriod"
        title: previous sick requested period
      created_at:
        type: string
        format: date-time
        title: created at
      organization_id:
        type: string
        title: unique Id of organization for which employee is working for
  fmEmploymentHistoryInfo:
    type: object
    properties:
      recent_employer:
        type: string
        title: recent employer name
      position:
        type: string
        title: position at previous job
      contact_name:
        type: string
        title: contact name at recent employment post
      contact_person_number:
        type: string
        title: contact person phone number at recent employment post
      contact_person_email:
        type: string
        title: contact person email at recent employment post
      is_able_to_contact:
        type: string
        title: can the person be able to contact
    title: history of employment of employee information
  fmFaqData:
    type: object
    properties:
      key:
        type: string
        title: key
      value:
        type: string
        title: value
  fmFeedbackResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of employee
      client_id:
        type: string
        title: unique id of client who is providing feedback
      sector:
        type: string
        title: sector of employee
      department_id:
        type: string
        title: unique id of department
      rating:
        type: string
        title: provided rating
      feedback_comments:
        type: string
        title: provided feedback comments
      organization_id:
        type: string
        title: organization id
      feedback_id:
        type: string
        title: unique id of feedback
      created_at:
        type: string
        format: date-time
        title: transfer data creation time
  fmForgotPasswordRequest:
    type: object
    properties:
      email:
        type: string
        title: email id of user
  fmForgotPasswordResponse:
    type: object
    properties:
      success:
        type: boolean
        title: acknowlege
  fmGeneralEmployeeInformation:
    type: object
    properties:
      region:
        type: string
        title: Region of the employee
      area:
        type: string
        title: Area of the employee
      profile_picture:
        type: string
        title: profile picture
    title: General employee information
  fmGetClientEmployeeIdsByEmployeeResponse:
    type: object
    properties:
      client_employee_id:
        type: array
        items:
          type: string
        title: Array of client_employee_ids
    title: Response containing list of client_employee_ids
  fmGetClientIdsByEmployeeResponse:
    type: object
    properties:
      client_ids:
        type: array
        items:
          type: string
        title: Array of client_employee_ids
    title: Response containing list of client_ids
  fmGetContractedHoursByClientResponse:
    type: object
    properties:
      employees_contracted_hours:
        type: array
        items:
          "$ref": "#/definitions/fmGetContractedHoursResponse"
  fmGetContractedHoursByEmployeeResponse:
    type: object
    properties:
      clients_contracted_hours:
        type: array
        items:
          "$ref": "#/definitions/fmGetContractedHoursResponse"
  fmGetContractedHoursResponse:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique id of client employee relation
      client_id:
        type: string
        title: unique id of client
      employee_id:
        type: string
        title: unique id of employee
      department_id:
        type: string
        title: department of employee
      designation:
        type: string
        title: designation of employee in the client
      shift_contracted_day_hours:
        type: array
        items:
          "$ref": "#/definitions/fmShiftContractedDayHours"
        title: contracted hours for the day of the week
      start_date:
        type: string
        format: date-time
        title: contract start date
      end_date:
        type: string
        format: date-time
        title: contract end date
      is_head_office:
        type: boolean
        title: is employee from head office
      allow_all_clients:
        type: boolean
        title: allow access to all client
      allowed_client_ids:
        type: array
        items:
          type: string
        title: list of allowed clients
  fmGetEmployeeIdsByClientIdResponse:
    type: object
    properties:
      employee_list:
        type: array
        items:
          "$ref": "#/definitions/GetEmployeeIdsByClientIdResponseEmployeeListData"
        title: List of employees
    title: Response containing employee_ids
  fmGetEmployeeTrainingResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/GetEmployeeTrainingResponseEmployeeTrainingResponse"
    title: Response for get employee trainings
  fmGetTargetTasksResponse:
    type: object
    properties:
      client_employee_id:
        type: string
        title: unique identifier for the client employee relation
      start_date:
        type: string
        format: date-time
        title: start date for target tasks
      end_date:
        type: string
        format: date-time
        title: end date for target tasks
      weekly_target_tasks:
        type: object
        additionalProperties:
          type: string
          format: int64
        title: The target tasks for the 7 days
    title: Response for getting target task of an employee for a client
  fmGetUserListFromRoleResponse:
    type: object
    properties:
      users:
        type: array
        items:
          "$ref": "#/definitions/fmUserData"
        title: list of users with their roles and scopes
  fmGetUserListResponse:
    type: object
    properties:
      users:
        type: array
        items:
          "$ref": "#/definitions/fmUserData"
        title: list of users with their roles and scopes
  fmHmRevenueDetails:
    type: object
    properties:
      full_name:
        type: string
        title: declaration full name
      declaration_date:
        type: string
        title: declaration date
      employment_start_date:
        type: string
        title: employement start date
      gender:
        type: string
        title: gender
      employment_statement:
        type: string
        title: employement statement
      student_loan_faq:
        type: array
        items:
          "$ref": "#/definitions/fmFaqData"
        title: student loan questions
      postgraduate_loan_faq:
        type: array
        items:
          "$ref": "#/definitions/fmFaqData"
        title: post graduate loan question
      signature:
        type: string
        title: signatute file upload
      signature_text:
        type: string
        title: 'signature: full_name'
  fmHolidayResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: Employee id of employee who has requested a leave/holiday
      leave_from_date:
        type: string
        format: date-time
        title: Leave from date
      leave_to_date:
        type: string
        format: date-time
        title: Leave upto date
      covered_by_employee_id:
        type: string
        title: The employee who will be covering the absentee employee
      client_id:
        type: string
        title: Client at which the employee is taking a lave
      status:
        type: string
        title: Status of the holiday request
      created_at:
        type: string
        format: date-time
        title: The timestamp at which holiday record was created
      organization_id:
        type: string
        title: Organization id of the employee
      holiday_id:
        type: string
        title: Holiday Id
    title: Single Holiday Payload
  fmHourlyRateInfo:
    type: object
    properties:
      weekdays_rate:
        type: string
        title: weekdays_rate details
      weekend_rate:
        type: string
        title: weekend_rate details
      overtime_rate:
        type: string
        title: overtime_rate details
    title: Hourly rate of Employee information
  fmInvoice:
    type: object
    properties:
      invoice_type:
        type: string
      monthly:
        type: string
      yearly:
        type: string
  fmIssueResponse:
    type: object
    properties:
      raised_by:
        type: string
        title: id of the user raising the issue
      assigned_to:
        type: string
        title: id of the user responsible for solving the issue
      details:
        type: string
        title: details of the isssue
      deadline:
        type: string
        format: date-time
        title: deadline of solving the issue
      organization_id:
        type: string
        title: unique id of the organization
      department_id:
        type: string
        title: unique id of the department
      status:
        type: string
        title: status of the issue
      resolved_at:
        type: string
        format: date-time
        title: resolved date
      created_at:
        type: string
        format: date-time
        title: date of issue creation
      updated_at:
        type: string
        format: date-time
        title: date of issue updated
      issue_id:
        type: string
        title: unique id of the issue
  fmLabourBudget:
    type: object
    properties:
      daily:
        type: string
      weekly:
        type: string
      monthly:
        type: string
      yearly:
        type: string
  fmLicenseDetails:
    type: object
    properties:
      is_valid_license:
        type: boolean
        title: is_valid_license yes/no
      license_number:
        type: string
        title: if valid , license no
  fmListAreaResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListAreaResponseAreaResponse"
  fmListCheckResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListCheckResponseCheckResponse"
        title: list of checks
    title: Response for list of check request
  fmListClientEmployeeResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListClientEmployeeResponseClientEmployeeResponse"
  fmListClientMobilizationResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListClientMobilizationResponseClientMobilizationResponse"
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
    title: Response for list of client mobilization
  fmListClientRequestSearchParam:
    type: object
    properties:
      name:
        type: string
        title: name of client
      client_code:
        type: string
        title: unique client code
      area:
        type: string
        title: area of client
      region:
        type: string
        title: region of client
  fmListClientResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListClientResponseClientResponse"
        title: list of clients
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
  fmListCorrectionResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListCorrectionResponseCorrectionResponse"
  fmListCoverResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmCoverResponse"
        title: list of Covers
    title: Response for Cover list
  fmListDepartmentResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListDepartmentResponseDepartmentResponse"
  fmListDesignationResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListDesignationResponseDesignationResponse"
  fmListEmployeeLeaverResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmEmployeeLeaverResponse"
        title: list of leaver employees
    title: Response for listing leavers
  fmListEmployeeRequestSearchParam:
    type: object
    properties:
      name:
        type: string
        title: name of client
      employee_code:
        type: string
        format: int64
        title: unique client code
      area:
        type: string
        title: area of client
      region:
        type: string
        title: region of client
  fmListEmployeeResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListEmployeeResponseEmployeeResponse"
        title: list of employees
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
    title: response for fetching list of employees
  fmListEmployeeSickResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmEmployeeSickResponse"
        title: list of employee sick
    title: Response for creating sick of employee
  fmListFeedbackResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmFeedbackResponse"
  fmListHolidayResponse:
    type: object
    properties:
      holidays:
        type: array
        items:
          "$ref": "#/definitions/fmHolidayResponse"
        title: list of holidays
    title: Response for holiday list
  fmListInventoryCategoryResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListInventoryCategoryResponseInventoryCategory"
        title: Output list for inventory categories
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
    title: Response for listing inventory categories
  fmListInventoryItemResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListInventoryItemResponseInventoryItem"
        title: Output list
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
    title: Response of item list
  fmListIssuesResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmIssueResponse"
        title: list of issues
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
    title: List issues response
  fmListJobTypeResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListJobTypeResponseJobTypeResponse"
  fmListMeetingResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListMeetingResponseMeetingResponse"
        title: list of meetings
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
  fmListNotesResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmNoteResponse"
        title: list of Notes
      metadata:
        "$ref": "#/definitions/fmListResponseMetadata"
        title: metadata about response
    title: List Notes response
  fmListOrganizationResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListOrganizationResponseOrganizationResponse"
        title: list of organizations
    title: response for fetching list of organization
  fmListPeriodicTaskResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          "$ref": "#/definitions/fmTimesheetResponse"
        title: list of periodic tasks  queried by user
  fmListRegionResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListRegionResponseRegionResponse"
  fmListRequestFilter:
    type: object
    properties:
      limit:
        type: integer
        format: int32
      page:
        type: integer
        format: int32
  fmListResponseMetadata:
    type: object
    properties:
      total_rows:
        type: integer
        format: int32
  fmListSectorResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/ListSectorResponseSectorResponse"
  fmListTaskByClientResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          "$ref": "#/definitions/ListTaskByClientResponseTaskByClientResponse"
  fmListTaskByEmployeeResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          "$ref": "#/definitions/fmTaskByEmployeeResponse"
        title: list of tasks by employee_id queried by user
  fmListTaskByMobileEmployeesResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          "$ref": "#/definitions/fmTaskByEmployeeResponse"
        title: list of mobile tasks by employee_id queried by user
  fmListTaskByVariationClientsResponse:
    type: object
    properties:
      tasks:
        type: array
        items:
          "$ref": "#/definitions/fmTaskByEmployeeResponse"
  fmListTaskResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmTaskResponse"
        title: list of tasks
    title: Response for list of task request
  fmListTransferResponse:
    type: object
    properties:
      result:
        type: array
        items:
          "$ref": "#/definitions/fmTransferResponse"
  fmLoginRequest:
    type: object
    properties:
      username:
        type: string
        title: username of user
      password:
        type: string
        title: password of user
    title: Request for login
  fmLoginResponse:
    type: object
    properties:
      access_token:
        type: string
        title: access token
      refresh_token:
        type: string
        title: refresh token
    title: Response for login
  fmLogoutRequest:
    type: object
    properties:
      refresh_token:
        type: string
        title: authentication token for logout requests
    title: Request for logout
  fmLogoutResponse:
    type: object
    properties:
      message:
        type: string
        title: action result
    title: Response for logout
  fmMobilizationPrincipal:
    type: object
    properties:
      type:
        type: string
        title: type of user
      id:
        type: string
        title: unique id of the user
      name:
        type: string
        title: name of the user
  fmNextOfKeenEmployeeInfo:
    type: object
    properties:
      name:
        type: string
        title: name of next of keen
      relation:
        type: string
        title: relation
      address:
        type: string
        title: address
      postcode:
        type: string
        title: postcode
      contact_number:
        type: string
        title: contact_number
      mobile_number:
        type: string
        title: mobile_number
      email:
        type: string
        title: email details
      date:
        type: string
        format: date-time
        title: date
      signature:
        type: string
        title: signature file upload
      signature_text:
        type: string
        title: signature text
    title: Next of Keen employee information
  fmNoteResponse:
    type: object
    properties:
      organization_id:
        type: string
        title: id of the organization this note belongs to
      created_by:
        type: string
        title: id of the note creater
      for:
        type: array
        items:
          type: string
        title: notes for
      notes:
        type: string
        title: notes detail
      note_date:
        type: string
        format: date-time
        title: note date
      note_id:
        type: string
        title: unique id of note to be updated
      created_at:
        type: string
        format: date-time
        title: date of note creation
      updated_at:
        type: string
        format: date-time
        title: date of note updated
  fmOfficialEmployeeInformationForListing:
    type: object
    properties:
      employee_code:
        type: string
        format: int64
        title: Employee code within the organization
      work_permit_expiry_date:
        type: string
        format: date-time
        title: Work permit expiry date of the employee
      dbs_details:
        "$ref": "#/definitions/fmDbsDetails"
        title: dbs details of employee
      payment_type:
        type: string
        title: Payment type
      department_id:
        type: string
        title: Department ID
      cv_attachment:
        type: string
        title: CV path
      employee_type:
        type: string
        title: Employee type
      is_tupe:
        type: boolean
        title: Is tupe
      training_type:
        type: string
        title: type of training to be given to employee
      training_date_time:
        type: string
        format: date-time
        title: Training date/time
      comment:
        type: string
        title: comments if any
      licence_details:
        "$ref": "#/definitions/fmLicenseDetails"
        title: license details
      hourly_rate:
        "$ref": "#/definitions/fmHourlyRateInfo"
      interviewer:
        type: string
        title: interviewer is also from among the active employee  list
      interviewing_date_time:
        type: string
        format: date-time
        title: Interview date/time
    title: |-
      Official employee information used by list, detail endpoint
      an extra employee_code field is added here from
      OfficialEmployeeInformationForUpsert
  fmOfficialEmployeeInformationForUpsert:
    type: object
    properties:
      work_permit_expiry_date:
        type: string
        format: date-time
        title: Work permit expiry date of the employee
      dbs_details:
        "$ref": "#/definitions/fmDbsDetails"
      is_tupe:
        type: boolean
        title: Is tupe
      payment_type:
        type: string
        title: Payment type
      department_id:
        type: string
        title: Department ID
      cv_attachment:
        type: string
        title: CV path
      employee_type:
        type: string
        title: |-
          type of contract the employee have with the org: dropdown value -
          permanent, temporary and zero hour
      interviewer:
        type: string
        title: interviewer is also from among the active employee  list
      interviewing_date_time:
        type: string
        format: date-time
        title: Interview date/time
      training_type:
        type: string
        title: type of training to be given to employee
      training_date_time:
        type: string
        format: date-time
        title: Training date/time
      comment:
        type: string
        title: comments if any
      licence_details:
        "$ref": "#/definitions/fmLicenseDetails"
        title: license details
      hourly_rate:
        "$ref": "#/definitions/fmHourlyRateInfo"
    title: Official employee information used by create, update endpoints
  fmPeriodicBudget:
    type: object
    properties:
      frequency:
        type: string
      totalBudget:
        type: number
        format: float
      totalHours:
        type: number
        format: float
      budgets:
        type: array
        items:
          "$ref": "#/definitions/PeriodicBudgetPBudget"
  fmRecurrenceDetails:
    type: object
    properties:
      id:
        type: string
        title: id of task recurrence
      type:
        type: string
        title: 'type of recurrence: Allowed [CUSTOM, DAILY, WEEKLY, MONTHLY_DAY, MONTHLY_WEEK,
          YEARLY]'
      type_details:
        "$ref": "#/definitions/fmRecurrenceTypeDetails"
        title: type details;
      start_date:
        type: string
        format: date-time
        title: Date from which recurrence starts
      end_date:
        type: string
        format: date-time
        title: Date until which recurrence is created
      status:
        type: boolean
        title: 'status : by default set to true'
      created_at:
        type: string
        format: date-time
        title: created_date
      updated_at:
        type: string
        format: date-time
        title: updated_date
  fmRecurrenceTypeDetails:
    type: object
    properties:
      dates:
        type: array
        items:
          type: string
          format: date-time
        title: 'multiple dates : For CUSTOM type'
      week_days:
        type: array
        items:
          type: string
        title: 'multiple week_days name: allowed SUNDAY, MONDAY, ... SATURDAY'
      day_of_month:
        type: integer
        format: int32
        title: 'day of the month: for MONTHLY_DATE or YEARLY'
      name_of_month:
        type: string
        title: 'string name of month : for YEARLY'
      monthly_week_details:
        type: array
        items:
          "$ref": "#/definitions/RecurrenceTypeDetailsMonthlyWeekDetails"
        title: Monthly week details
  fmReferenceEmployeeInfo:
    type: object
    properties:
      name:
        type: string
        title: name of reference person
      relation:
        type: string
        title: relation to reference person
      address:
        type: string
        title: address of reference person
      postcode:
        type: string
        title: postcode of reference person
      contact_number:
        type: string
        title: contact number of reference person
      email:
        type: string
        title: email of reference person
      can_contact_without_notifying:
        type: boolean
    title: Reference employee information
  fmRefreshRequest:
    type: object
    properties:
      refresh_token:
        type: string
        title: authetication token for refresh requests
    title: Request for refresh
  fmRegion:
    type: object
    properties:
      region:
        type: string
      region_manager:
        type: string
        title: Region manager employee_id
  fmRemoveAreaSupervisorRequest:
    type: object
    properties:
      area_id:
        type: string
        title: id of area
      area_supervisor_id:
        type: string
        title: id of area supervisor
  fmRemoveAreaSupervisorResponse:
    type: object
    properties:
      status:
        type: boolean
        title: action response
  fmResetPasswordRequest:
    type: object
    properties:
      email:
        type: string
        title: email of user
      token:
        type: string
        title: token for reset
      password:
        type: string
        title: new password of user
  fmResetPasswordResponse:
    type: object
    properties:
      success:
        type: boolean
        title: action report
  fmRoleResponse:
    type: object
    properties:
      roles:
        type: array
        items:
          "$ref": "#/definitions/fmUserRole"
        title: available roles
  fmScopeResponse:
    type: object
    properties:
      scope_groups:
        type: array
        items:
          "$ref": "#/definitions/fmUserScopeGroup"
        title: available scopes
  fmShiftContractedDayHours:
    type: object
    properties:
      shift:
        type: string
        title: shift of the employee for the client
      shift_start_time:
        type: string
        title: shift start time of the employee for the client
      shift_end_time:
        type: string
        title: shift end time of the employee for the client
      vacancy_id:
        type: string
        title: vacancy id
  fmSickPeriod:
    type: object
    properties:
      from_date:
        type: string
        format: date-time
        title: sick requested from date
      to_date:
        type: string
        format: date-time
        title: sick requested till date
  fmStoreBudget:
    type: object
    properties:
      monthly:
        type: string
  fmTaskByEmployeeResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client on which employee was involved
      task_id:
        type: string
        title: |-
          unique identifier of the task completed by employee on the client in
          particular date
      start_time:
        type: string
        format: date-time
        title: |-
          task must start by at least this time. Start time is combination of
          appointment date and time
      estimate_time:
        type: string
        title: the estimated time period to complete the task
      check_in_time:
        type: string
        format: date-time
        title: check in time of the task on the particular date
      check_out_time:
        type: string
        format: date-time
        title: check out time of the task on the particular date
      title:
        type: string
        title: task title
      description:
        type: string
        title: task descriptiom
      employee_id:
        type: string
        title: employee id of the employee for which the task was assigned to
  fmTaskDetailResponse:
    type: object
    properties:
      task_detail:
        "$ref": "#/definitions/fmTaskResponse"
        title: Details of the task
  fmTaskResponse:
    type: object
    properties:
      task_id:
        type: string
        title: unique identifier for the task
      title:
        type: string
        title: title (name) of the task
      description:
        type: string
        title: description of the task
      client_id:
        type: string
        title: client the task is associated with. Optional
      employee_id:
        type: string
        title: employee the task is assigned to
      start_time:
        type: string
        format: date-time
        title: |-
          task must start by at least this time. Start time is combination of
          appointment date and time
      estimate_time:
        type: string
        title: the estimated time period to complete the task
      actual_in:
        type: string
        format: date-time
        title: time the task was checked in
      actual_out:
        type: string
        format: date-time
        title: time the task was checked out
      created_at:
        type: string
        format: date-time
        title: time generated by system at the instance the task was created
      organization_id:
        type: string
        title: organization id of the employee
      is_variation:
        type: boolean
        title: flag to confirm if the task is variation or not
      correction:
        type: string
        title: correction duration of the task
      is_recurrence:
        type: boolean
        title: wether task is recurrence
      recurrence:
        "$ref": "#/definitions/fmRecurrenceDetails"
        title: details of recurrence
      recurrence_parent_task:
        type: string
        title: Id of task from which current task was generated
    title: Task definition
  fmTimesheetResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique identifier of the client on which employee was involved
      employee_id:
        type: string
        title: unique identifier of the employee who was involved with the task
      task_id:
        type: string
        title: |-
          unique identifier of the task completed by employee on the client in
          particular date
      type:
        type: string
        title: 'the type of periodic tasks. eg: one-off, accomodation, regular, window'
      check_in_time:
        type: string
        format: date-time
        title: check in time of the task on the particular date
      check_out_time:
        type: string
        format: date-time
        title: check out time of the task on the particular date
  fmTrainingEmployeeInfo:
    type: object
    properties:
      skill:
        type: string
        title: skill title
      details:
        type: string
        title: details of the skills
    title: Training employee information
  fmTransferResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of employee to transfer
      department_id:
        type: string
        title: new department id
      from_client_id:
        type: string
        title: unique id of client from which employee is transfered
      to_client_id:
        type: string
        title: unique id of client to which employee is transfered
      transfer_date:
        type: string
        format: date-time
        title: effective date of transfer
      transfer_reason:
        type: string
        title: reason of employee transfer
      sector:
        type: string
        title: new sector
      transfer_id:
        type: string
        title: unique id of employee transfer
      created_at:
        type: string
        format: date-time
        title: transfer data creation time
      organization_id:
        type: string
        title: organization id
  fmUpdateAgendaDecisionRequest:
    type: object
    properties:
      agenda_decision_id:
        type: string
        title: id of decision
      meeting_id:
        type: string
        title: id of meeting
      agenda_id:
        type: string
        title: id of agenda
      decision:
        type: string
        title: string decision of agenda
      action_by:
        type: string
        title: action to be taken by
      deadline_date:
        type: string
        format: date-time
        title: deadline for action to be taken
  fmUpdateAreaRequest:
    type: object
    properties:
      area_id:
        type: string
        title: id of area
      title:
        type: string
        title: title of area
      organization_id:
        type: string
        title: organization for the area
      region_id:
        type: string
        title: Region that area belongs to
      area_manager:
        type: string
        title: id of area manager (employee-id)
      areamanager_restricted_clients:
        type: array
        items:
          type: string
        title: id of clients disabled for area_manager
  fmUpdateClientMobilizationRequest:
    type: object
    properties:
      client_id:
        type: string
        title: client id for the mobilization
      category:
        type: string
        title: category of mobilization
      subject:
        type: string
        title: subject of mobilization
      message:
        type: string
        title: message for the mobilization
      by:
        "$ref": "#/definitions/fmMobilizationPrincipal"
        title: mobilization by
      to:
        "$ref": "#/definitions/fmMobilizationPrincipal"
        title: mobilization to
      date_of_mobilization:
        type: string
        format: date-time
        title: mobilization date
      client_mobilization_id:
        type: string
        title: unique id of the client mobilization
      created_at:
        type: string
        format: date-time
        title: date of mobilization creation
    title: Request to update client mobilization
  fmUpdateClientMobilizationResponse:
    type: object
    properties:
      client_mobilization_id:
        type: string
        title: unique id of the updated client mobilization
    title: Response for update client mobilization
  fmUpdateClientRequest:
    type: object
    properties:
      client_id:
        type: string
        title: client Id of the client to update
      name:
        type: string
        title: full name of the client
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the client
      client_detail:
        "$ref": "#/definitions/fmClientDetail"
        title: information details of the client
      contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: |-
          Contact Person details of the client. Backend saves to
          ClientContactPersonService
      bank_account_details:
        "$ref": "#/definitions/fmBankAccountDetails"
        title: Bank account details of the client
      confidential_contact_people:
        type: array
        items:
          "$ref": "#/definitions/fmContactPerson"
        title: Confidential Contact Person detail of the client
      client_code:
        type: string
        title: unique code of client within the organization
      profile_image:
        type: string
        title: profile image of client
    title: request to update client by client id
  fmUpdateClientResponse:
    type: object
    properties:
      client_id:
        type: string
        title: client Id of the updated client
    title: response for UpdateClientRequest
  fmUpdateDepartmentRequest:
    type: object
    properties:
      department_id:
        type: string
        title: department_id of updated department
      organization_id:
        type: string
        title: organization_id  to which department belongs to
      title:
        type: string
        title: title of department
      description:
        type: string
        title: description of department
  fmUpdateDepartmentResponse:
    type: object
    properties:
      department_id:
        type: string
        title: department_id of updated department
  fmUpdateDesignationRequest:
    type: object
    properties:
      designation_id:
        type: string
        title: designation_id of updated designation
      department_id:
        type: string
        title: department_id to which the designation belongs to
      organization_id:
        type: string
        title: organization_id to which the designation belongs to
      title:
        type: string
        title: job title
      description:
        type: string
        title: details about the designation
  fmUpdateDesignationResponse:
    type: object
    properties:
      designation_id:
        type: string
        title: designation_id of updated designation
  fmUpdateEmployeeRequest:
    type: object
    properties:
      title:
        type: string
        title: 'title of employee : Eg: Mr, Mrs, Miss'
      employee_id:
        type: string
        title: employee Id of the employee to update
      first_name:
        type: string
        title: first name of the employee
      middle_name:
        type: string
        title: middle name of the employee
      last_name:
        type: string
        title: last name of the employee
      employee_code:
        type: string
        format: int64
        title: unique employee code for organization
      contact_detail:
        "$ref": "#/definitions/fmContactDetail"
        title: contact details of the employee
      employee_info:
        "$ref": "#/definitions/fmEmployeeInformationForUpsert"
        title: Employee information
      confidential_employee_info:
        "$ref": "#/definitions/fmConfidentialEmployeeInfo"
        title: Confidential Information about the employee
      training_info:
        type: array
        items:
          "$ref": "#/definitions/fmTrainingEmployeeInfo"
        title: trainig Information filled by the organization
      history_info:
        type: array
        items:
          "$ref": "#/definitions/fmEmploymentHistoryInfo"
        title: employment history Information filled by the organization
      reference_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmReferenceEmployeeInfo"
        title: Reference Information about the employee
      criminal_conv_emp_info:
        type: array
        items:
          "$ref": "#/definitions/fmCriminalConvictionEmployeeInfo"
        title: Criminal Conviction Information about the employee
      next_of_keen_employee_info:
        "$ref": "#/definitions/fmNextOfKeenEmployeeInfo"
        title: Next of kee Information about the employee
      education_employee_info:
        type: array
        items:
          "$ref": "#/definitions/fmEducationEmployeeInformation"
        title: education Information about the employee
    title: request to update employee by employee id
  fmUpdateEmployeeResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: employee Id of the updated employee
    title: response for UpdateEmployeeRequest
  fmUpdateEmployeeScopeRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: id the employee
      user_id:
        type: string
        title: user_id
      roles:
        type: array
        items:
          type: string
        title: roles for this association
      scopes:
        type: array
        items:
          type: string
        title: scopes for this association
      organization_id:
        type: string
        title: id of organization
  fmUpdateEmployeeSickRequest:
    type: object
    properties:
      employee_sick_id:
        type: string
        title: unique id of employee sick
      status:
        type: string
        title: status of request
      sick_period:
        "$ref": "#/definitions/fmSickPeriod"
        title: period of requested sick
      covered_by_employee_id:
        type: string
        title: covered by employee id
      payment:
        type: string
        title: is sick leave paid or unpaid
      comment:
        type: string
        title: comment reason for leave
      organization_id:
        type: string
        title: unique Id of organization for which employee is working for
      sick_entitlement:
        type: string
        title: total number of sick days in a year
      remaining_sick_entitlement:
        type: string
        title: remaining sick entitlement
    title: Request for updating sick of employee
  fmUpdateEmployeeSickResponse:
    type: object
    properties:
      employee_sick_id:
        type: string
        title: unique id of employee sick
    title: Response fro sick update success
  fmUpdateEmployeeStatusRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: unique identifier of the employee to update status of
      status:
        type: string
        title: new status
    title: Request to update employee status
  fmUpdateEmployeeStatusResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique identifier of employee
    title: Response when updating an employee status
  fmUpdateIssueRequest:
    type: object
    properties:
      raised_by:
        type: string
        title: id of the user raising the issue
      assigned_to:
        type: string
        title: id of the user responsible for solving the issue
      details:
        type: string
        title: details of the isssue
      deadline:
        type: string
        format: date-time
        title: deadline of solving the issue
      organization_id:
        type: string
        title: unique id of the organization
      department_id:
        type: string
        title: unique id of the department
      status:
        type: string
        title: status of the issue
      resolved_at:
        type: string
        format: date-time
        title: resolved date
      issue_id:
        type: string
        title: unique id of the issue
    title: Update issue request
  fmUpdateIssueResponse:
    type: object
    properties:
      issue_id:
        type: string
        title: unique id of the issue
    title: Update issue response
  fmUpdateMeetingRequest:
    type: object
    properties:
      meeting_id:
        type: string
        title: meeting Id of the meeting to update
      meeting_date:
        type: string
        format: date-time
        title: date of the meeting
      estimated_time:
        type: string
        title: estimated time of the meeting
      title:
        type: string
        title: title of meeting
      department_id:
        type: string
        title: id of department of generated meeting
      raised_by:
        type: string
        title: id of employee who raised the meeting
      attendee_ids:
        type: array
        items:
          type: string
        title: names of employees who attend the  meetings
      agenda_detail:
        type: array
        items:
          "$ref": "#/definitions/fmAgendaUpdateDetail"
        title: information of agenda of the meetong
      location:
        type: string
        title: location of meeting
      deleted_agenda_ids:
        type: array
        items:
          type: string
        title: deleted_agenda_ids
    title: request to update meeting by meeting_id
  fmUpdateMeetingResponse:
    type: object
    properties:
      meeting_id:
        type: string
        title: meeting Id of the updated meeting
    title: response for UpdateMeetingRequest
  fmUpdateNoteRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: id of the organization this note belongs to
      created_by:
        type: string
        title: id of the note creater
      for:
        type: array
        items:
          type: string
        title: notes for
      notes:
        type: string
        title: notes detail
      note_date:
        type: string
        format: date-time
        title: note date
      note_id:
        type: string
        title: unique id of note to be updated
    title: Update note request
  fmUpdateNoteResponse:
    type: object
    properties:
      note_id:
        type: string
        title: unique id of the updated note
    title: Update note response
  fmUpdateRecurrenceRequest:
    type: object
    properties:
      task_id:
        type: string
        title: id of task
      is_recurrence:
        type: boolean
        title: is recurrence
      recurrence:
        "$ref": "#/definitions/fmUpsertRecurrence"
        title: details of recurrence
  fmUpdateRecurrenceResponse:
    type: object
    properties:
      task_id:
        type: string
        title: unique id of the task
  fmUpdateRegionRequest:
    type: object
    properties:
      region_id:
        type: string
        title: id of region
      organization_id:
        type: string
        title: id of organization
      title:
        type: string
        title: title of region
      regional_manager:
        type: string
        title: id of area manager (employee-id)
  fmUpdateSectorRequest:
    type: object
    properties:
      sector_id:
        type: string
        title: sector_id of updated sector
      organization_id:
        type: string
        title: organization_id to which the sector belongs to
      title:
        type: string
        title: title of sector
      description:
        type: string
        title: details about the sector
  fmUpdateSectorResponse:
    type: object
    properties:
      sector_id:
        type: string
        title: sector_id of updated sector
  fmUpdateTaskByClientRequest:
    type: object
    properties:
      client_id:
        type: string
        title: fetch timesheet for this client_id
      tasks:
        type: array
        items:
          "$ref": "#/definitions/UpdateTaskByClientRequestUpdateTaskByClient"
        title: task list
    title: Request for update client timesheet
  fmUpdateTaskByClientResponse:
    type: object
    properties:
      client_id:
        type: string
        title: unique id of the client
  fmUpdateTaskByEmployeeRequest:
    type: object
    properties:
      employee_id:
        type: string
        title: fetch timesheet for this employee_id
      tasks:
        type: array
        items:
          "$ref": "#/definitions/UpdateTaskByEmployeeRequestUpdateTaskByEmployee"
    title: Request for update employee timesheet
  fmUpdateTaskByEmployeeResponse:
    type: object
    properties:
      employee_id:
        type: string
        title: unique id of the employee
  fmUpdateTaskRequest:
    type: object
    properties:
      task_id:
        type: string
        title: unique id of the task
      title:
        type: string
        title: title (name) of the task
      description:
        type: string
        title: description of the task
      start_time:
        type: string
        format: date-time
        title: |-
          task must start by at least this time. Start time is combination of
          appointment date and time
      estimate_time:
        type: string
        title: the estimated time period to complete the task
      is_variation:
        type: boolean
        title: flag to confirm if the task is variation or not
    title: Request to update task
  fmUpdateTaskResponse:
    type: object
    properties:
      task_id:
        type: string
        title: unique id of the task
    title: Response from update task
  fmUpsertAgendaDecisionObjectionResponse:
    type: object
    properties:
      decision_objection_id:
        type: string
        title: id of objection
  fmUpsertAgendaDecisionResponse:
    type: object
    properties:
      agenda_decision_id:
        type: string
        title: id of decision
  fmUpsertAgendaViewResponse:
    type: object
    properties:
      agenda_view_id:
        type: string
        title: id of agenda view
  fmUpsertAreaResponse:
    type: object
    properties:
      area_id:
        type: string
  fmUpsertAreaSupervisorRequest:
    type: object
    properties:
      area_id:
        type: string
        title: unique id of area
      area_supervisor:
        type: string
        title: area supervisor id (employee-id)
      allowed_client_ids:
        type: array
        items:
          type: string
        title: list of clients allowed to area_supervisor
  fmUpsertAreaSupervisorResponse:
    type: object
    properties:
      status:
        type: boolean
        title: action response
  fmUpsertRecurrence:
    type: object
    properties:
      type:
        type: string
        title: 'type of recurrence: Allowed [CUSTOM, DAILY, WEEKLY, MONTHLY_DAY, MONTHLY_WEEK,
          YEARLY]'
      type_details:
        "$ref": "#/definitions/fmRecurrenceTypeDetails"
        title: type details;
      start_date:
        type: string
        format: date-time
        title: Date from which recurrence starts
      end_date:
        type: string
        format: date-time
        title: Date until which recurrence is created
  fmUpsertRegionResponse:
    type: object
    properties:
      region_id:
        type: string
  fmUpsertRoleRequest:
    type: object
    properties:
      role:
        type: string
        title: role to update - this must be unique
      scopes:
        type: array
        items:
          type: string
        title: scopes included in the role
      organization_id:
        type: string
        title: id of organization
    title: Request for updating roles
  fmUpsertScopeRequest:
    type: object
    properties:
      organization_id:
        type: string
        title: id of organization
      title:
        type: string
        title: title of scope group
      scopes:
        type: array
        items:
          "$ref": "#/definitions/fmUserScope"
        title: scopes in the group
  fmUserData:
    type: object
    properties:
      user_id:
        type: string
        title: id of user
      employee_id:
        type: string
        title: id of employee
      roles:
        type: array
        items:
          type: string
        title: roles of user
      scopes:
        type: array
        items:
          type: string
        title: scopes of user
  fmUserRole:
    type: object
    properties:
      role:
        type: string
        title: name of role
      scopes:
        type: array
        items:
          type: string
        title: scopes for the given role
  fmUserScope:
    type: object
    properties:
      alias:
        type: string
        title: alias of scope (readable for user)
      scope:
        type: string
        title: name of scope (defined by dev)
      description:
        type: string
        title: description of scope
  fmUserScopeGroup:
    type: object
    properties:
      name:
        type: string
        title: title of group
      scopes:
        type: array
        items:
          "$ref": "#/definitions/fmUserScope"
        title: scopes in the group
  protobufAny:
    type: object
    properties:
      type_url:
        type: string
      value:
        type: string
        format: byte
  runtimeError:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          "$ref": "#/definitions/protobufAny"
